{
	"id": "2cd565b6a3422039fcc65681abfb894b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Tokensale.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\nuint256 constant INITIAL_TOKEN_PRICE = 1;\r\naddress constant MAINNET_USDT = 0x55d398326f99059fF775485246999027B3197955;\r\naddress constant MAINNET_VALT = 0x9C904076C2D96641507b211EE3e499872713dD29; // VALT TOKEN ADDRESS\r\n\r\ncontract Valtsale {\r\n    uint256 public totalCap;\r\n\r\n    address public owner;\r\n\r\n    IERC20 usdt = IERC20(MAINNET_USDT); // USDT contract address\r\n    IERC20 valt = IERC20(MAINNET_VALT);\r\n\r\n    mapping (address => uint256) private balances;\r\n    receive() external payable {}\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner, \"Not the contract owner\");\r\n        _;\r\n    }\r\n\r\n    constructor() {\r\n        totalCap = 0;\r\n    }\r\n\r\n    function buyTokenWithUSDT(uint256 _usdtAmount) public  {\r\n        uint256 tokenAmount = _usdtAmount / INITIAL_TOKEN_PRICE;\r\n\r\n        require(usdt.balanceOf(msg.sender) >= tokenAmount, \"Insufficient USDT balance\");\r\n\r\n        totalCap = totalCap + tokenAmount;\r\n        usdt.transferFrom(msg.sender, address(this), _usdtAmount);\r\n        valt.transfer(msg.sender, tokenAmount);\r\n\r\n        balances[msg.sender] += tokenAmount;\r\n    }\r\n\r\n    function getBalance () public view returns(uint256) {\r\n        return balances[msg.sender];\r\n    }\r\n\r\n    function withdrawRemainingTokens() public onlyOwner {\r\n        uint256 balance = valt.balanceOf(address(this));\r\n        require(balance > 0, \"No tokens left to withdraw\");\r\n        valt.transfer(owner, balance);\r\n    }\r\n\r\n    function withdrawUSDT(address _to) public onlyOwner {\r\n        uint256 balance = usdt.balanceOf(address(this));\r\n        require(balance > 0, \"No USDT left to withdraw\");\r\n        usdt.transfer(_to, balance);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":750:9442  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x8B1A5C5C4C52FB56DABA CODESIZE 0xCD SWAP4 DUP6 0xE2 0xD9 SWAP13 JUMP 0xDB 0xCF TIMESTAMP INVALID PUSH19 0x3FEEAB237D81C6F864736F6C634300081A0033 ",
							"sourceMap": "750:8692:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 9442,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220698b1a5c5c4c52fb56daba38cd9385e2d99c56dbcf42fe723feeab237d81c6f864736f6c634300081a0033",
									".code": [
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 750,
											"end": 9442,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tokensale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tokensale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tokensale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Tokensale.sol": {
				"Valtsale": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_usdtAmount",
									"type": "uint256"
								}
							],
							"name": "buyTokenWithUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRemainingTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								}
							],
							"name": "withdrawUSDT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Tokensale.sol\":463:1905  contract Valtsale {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Tokensale.sol\":317:359  0x55d398326f99059fF775485246999027B3197955 */\n  0x55d398326f99059ff775485246999027b3197955\n    /* \"contracts/Tokensale.sol\":549:583  IERC20 usdt = IERC20(MAINNET_USDT) */\n  0x02\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Tokensale.sol\":394:436  0x9C904076C2D96641507b211EE3e499872713dD29 */\n  0x9c904076c2d96641507b211ee3e499872713dd29\n    /* \"contracts/Tokensale.sol\":615:649  IERC20 valt = IERC20(MAINNET_VALT) */\n  0x03\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Tokensale.sol\":861:906  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Tokensale.sol\":897:898  0 */\n  0x00\n    /* \"contracts/Tokensale.sol\":886:894  totalCap */\n  dup1\n    /* \"contracts/Tokensale.sol\":886:898  totalCap = 0 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Tokensale.sol\":463:1905  contract Valtsale {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Tokensale.sol\":463:1905  contract Valtsale {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16450092\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x59db80f8\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8afbf669\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xbcd2f64a\n      eq\n      tag_8\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Tokensale.sol\":1354:1452  function getBalance () public view returns(uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tokensale.sol\":488:511  uint256 public totalCap */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tokensale.sol\":1687:1902  function withdrawUSDT(address _to) public onlyOwner {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      pop\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Tokensale.sol\":1460:1679  function withdrawRemainingTokens() public onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/Tokensale.sol\":520:540  address public owner */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Tokensale.sol\":914:1346  function buyTokenWithUSDT(uint256 _usdtAmount) public  {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/Tokensale.sol\":1354:1452  function getBalance () public view returns(uint256) {... */\n    tag_13:\n        /* \"contracts/Tokensale.sol\":1397:1404  uint256 */\n      0x00\n        /* \"contracts/Tokensale.sol\":1424:1432  balances */\n      0x04\n        /* \"contracts/Tokensale.sol\":1424:1444  balances[msg.sender] */\n      0x00\n        /* \"contracts/Tokensale.sol\":1433:1443  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":1424:1444  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Tokensale.sol\":1417:1444  return balances[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Tokensale.sol\":1354:1452  function getBalance () public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Tokensale.sol\":488:511  uint256 public totalCap */\n    tag_18:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/Tokensale.sol\":1687:1902  function withdrawUSDT(address _to) public onlyOwner {... */\n    tag_24:\n        /* \"contracts/Tokensale.sol\":801:806  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":787:806  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":787:797  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":787:806  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Tokensale.sol\":779:833  require(msg.sender == owner, \"Not the contract owner\") */\n      tag_40\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_40:\n        /* \"contracts/Tokensale.sol\":1750:1765  uint256 balance */\n      0x00\n        /* \"contracts/Tokensale.sol\":1768:1772  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1768:1782  usdt.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Tokensale.sol\":1791:1795  this */\n      address\n        /* \"contracts/Tokensale.sol\":1768:1797  usdt.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_44\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_44:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/Tokensale.sol\":1750:1797  uint256 balance = usdt.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Tokensale.sol\":1826:1827  0 */\n      0x00\n        /* \"contracts/Tokensale.sol\":1816:1823  balance */\n      dup2\n        /* \"contracts/Tokensale.sol\":1816:1827  balance > 0 */\n      gt\n        /* \"contracts/Tokensale.sol\":1808:1856  require(balance > 0, \"No USDT left to withdraw\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/Tokensale.sol\":1867:1871  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1867:1880  usdt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Tokensale.sol\":1881:1884  _to */\n      dup4\n        /* \"contracts/Tokensale.sol\":1886:1893  balance */\n      dup4\n        /* \"contracts/Tokensale.sol\":1867:1894  usdt.transfer(_to, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      pop\n        /* \"contracts/Tokensale.sol\":1739:1902  {... */\n      pop\n        /* \"contracts/Tokensale.sol\":1687:1902  function withdrawUSDT(address _to) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Tokensale.sol\":1460:1679  function withdrawRemainingTokens() public onlyOwner {... */\n    tag_27:\n        /* \"contracts/Tokensale.sol\":801:806  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":787:806  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":787:797  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":787:806  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Tokensale.sol\":779:833  require(msg.sender == owner, \"Not the contract owner\") */\n      tag_59\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_60\n      swap1\n      tag_42\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_59:\n        /* \"contracts/Tokensale.sol\":1523:1538  uint256 balance */\n      0x00\n        /* \"contracts/Tokensale.sol\":1541:1545  valt */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1541:1555  valt.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Tokensale.sol\":1564:1568  this */\n      address\n        /* \"contracts/Tokensale.sol\":1541:1570  valt.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_62:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_65:\n        /* \"contracts/Tokensale.sol\":1523:1570  uint256 balance = valt.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Tokensale.sol\":1599:1600  0 */\n      0x00\n        /* \"contracts/Tokensale.sol\":1589:1596  balance */\n      dup2\n        /* \"contracts/Tokensale.sol\":1589:1600  balance > 0 */\n      gt\n        /* \"contracts/Tokensale.sol\":1581:1631  require(balance > 0, \"No tokens left to withdraw\") */\n      tag_66\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_66:\n        /* \"contracts/Tokensale.sol\":1642:1646  valt */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1642:1655  valt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Tokensale.sol\":1656:1661  owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1663:1670  balance */\n      dup4\n        /* \"contracts/Tokensale.sol\":1642:1671  valt.transfer(owner, balance) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_69:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_71:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_72:\n      pop\n        /* \"contracts/Tokensale.sol\":1512:1679  {... */\n      pop\n        /* \"contracts/Tokensale.sol\":1460:1679  function withdrawRemainingTokens() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Tokensale.sol\":520:540  address public owner */\n    tag_30:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Tokensale.sol\":914:1346  function buyTokenWithUSDT(uint256 _usdtAmount) public  {... */\n    tag_37:\n        /* \"contracts/Tokensale.sol\":980:999  uint256 tokenAmount */\n      0x00\n        /* \"contracts/Tokensale.sol\":281:282  1 */\n      0x01\n        /* \"contracts/Tokensale.sol\":1002:1013  _usdtAmount */\n      dup3\n        /* \"contracts/Tokensale.sol\":1002:1035  _usdtAmount / INITIAL_TOKEN_PRICE */\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n        /* \"contracts/Tokensale.sol\":980:1035  uint256 tokenAmount = _usdtAmount / INITIAL_TOKEN_PRICE */\n      swap1\n      pop\n        /* \"contracts/Tokensale.sol\":1086:1097  tokenAmount */\n      dup1\n        /* \"contracts/Tokensale.sol\":1056:1060  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1056:1070  usdt.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/Tokensale.sol\":1071:1081  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":1056:1082  usdt.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_76:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_78:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_79:\n        /* \"contracts/Tokensale.sol\":1056:1097  usdt.balanceOf(msg.sender) >= tokenAmount */\n      lt\n      iszero\n        /* \"contracts/Tokensale.sol\":1048:1127  require(usdt.balanceOf(msg.sender) >= tokenAmount, \"Insufficient USDT balance\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"contracts/Tokensale.sol\":1162:1173  tokenAmount */\n      dup1\n        /* \"contracts/Tokensale.sol\":1151:1159  totalCap */\n      sload(0x00)\n        /* \"contracts/Tokensale.sol\":1151:1173  totalCap + tokenAmount */\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"contracts/Tokensale.sol\":1140:1148  totalCap */\n      0x00\n        /* \"contracts/Tokensale.sol\":1140:1173  totalCap = totalCap + tokenAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Tokensale.sol\":1184:1188  usdt */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1184:1201  usdt.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Tokensale.sol\":1202:1212  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":1222:1226  this */\n      address\n        /* \"contracts/Tokensale.sol\":1229:1240  _usdtAmount */\n      dup6\n        /* \"contracts/Tokensale.sol\":1184:1241  usdt.transferFrom(msg.sender, address(this), _usdtAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_85\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_88\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_88:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_89:\n      pop\n        /* \"contracts/Tokensale.sol\":1252:1256  valt */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Tokensale.sol\":1252:1265  valt.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Tokensale.sol\":1266:1276  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":1278:1289  tokenAmount */\n      dup4\n        /* \"contracts/Tokensale.sol\":1252:1290  valt.transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_90\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_90:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_92\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_93:\n      pop\n        /* \"contracts/Tokensale.sol\":1327:1338  tokenAmount */\n      dup1\n        /* \"contracts/Tokensale.sol\":1303:1311  balances */\n      0x04\n        /* \"contracts/Tokensale.sol\":1303:1323  balances[msg.sender] */\n      0x00\n        /* \"contracts/Tokensale.sol\":1312:1322  msg.sender */\n      caller\n        /* \"contracts/Tokensale.sol\":1303:1323  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Tokensale.sol\":1303:1338  balances[msg.sender] += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_94\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_94:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Tokensale.sol\":969:1346  {... */\n      pop\n        /* \"contracts/Tokensale.sol\":914:1346  function buyTokenWithUSDT(uint256 _usdtAmount) public  {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_95:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_96:\n        /* \"#utility.yul\":177:201   */\n      tag_125\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_95\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_15:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_127\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_96\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":523:640   */\n    tag_98:\n        /* \"#utility.yul\":632:633   */\n      0x00\n        /* \"#utility.yul\":629:630   */\n      dup1\n        /* \"#utility.yul\":622:634   */\n      revert\n        /* \"#utility.yul\":769:895   */\n    tag_100:\n        /* \"#utility.yul\":806:813   */\n      0x00\n        /* \"#utility.yul\":846:888   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":839:844   */\n      dup3\n        /* \"#utility.yul\":835:889   */\n      and\n        /* \"#utility.yul\":824:889   */\n      swap1\n      pop\n        /* \"#utility.yul\":769:895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":901:997   */\n    tag_101:\n        /* \"#utility.yul\":938:945   */\n      0x00\n        /* \"#utility.yul\":967:991   */\n      tag_133\n        /* \"#utility.yul\":985:990   */\n      dup3\n        /* \"#utility.yul\":967:991   */\n      tag_100\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":956:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":901:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_102:\n        /* \"#utility.yul\":1076:1100   */\n      tag_135\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_101\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_136:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_103:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_138\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_102\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_23:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_141\n      tag_98\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1352:1471   */\n    tag_140:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_142\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_103\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_104:\n        /* \"#utility.yul\":1698:1722   */\n      tag_144\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_101\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_32:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_146\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2085   */\n    tag_105:\n        /* \"#utility.yul\":2036:2060   */\n      tag_148\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_95\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2029:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2061   */\n      eq\n        /* \"#utility.yul\":2016:2079   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2075:2076   */\n      0x00\n        /* \"#utility.yul\":2072:2073   */\n      dup1\n        /* \"#utility.yul\":2065:2077   */\n      revert\n        /* \"#utility.yul\":2016:2079   */\n    tag_149:\n        /* \"#utility.yul\":1963:2085   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2091:2230   */\n    tag_106:\n        /* \"#utility.yul\":2137:2142   */\n      0x00\n        /* \"#utility.yul\":2175:2181   */\n      dup2\n        /* \"#utility.yul\":2162:2182   */\n      calldataload\n        /* \"#utility.yul\":2153:2182   */\n      swap1\n      pop\n        /* \"#utility.yul\":2191:2224   */\n      tag_151\n        /* \"#utility.yul\":2218:2223   */\n      dup2\n        /* \"#utility.yul\":2191:2224   */\n      tag_105\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":2091:2230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2565   */\n    tag_36:\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2344:2346   */\n      0x20\n        /* \"#utility.yul\":2332:2341   */\n      dup3\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2319:2342   */\n      sub\n        /* \"#utility.yul\":2315:2347   */\n      slt\n        /* \"#utility.yul\":2312:2431   */\n      iszero\n      tag_153\n      jumpi\n        /* \"#utility.yul\":2350:2429   */\n      tag_154\n      tag_98\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":2312:2431   */\n    tag_153:\n        /* \"#utility.yul\":2470:2471   */\n      0x00\n        /* \"#utility.yul\":2495:2548   */\n      tag_155\n        /* \"#utility.yul\":2540:2547   */\n      dup5\n        /* \"#utility.yul\":2531:2537   */\n      dup3\n        /* \"#utility.yul\":2520:2529   */\n      dup6\n        /* \"#utility.yul\":2516:2538   */\n      add\n        /* \"#utility.yul\":2495:2548   */\n      tag_106\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":2485:2548   */\n      swap2\n      pop\n        /* \"#utility.yul\":2441:2558   */\n      pop\n        /* \"#utility.yul\":2236:2565   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2571:2740   */\n    tag_107:\n        /* \"#utility.yul\":2655:2666   */\n      0x00\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2684:2687   */\n      dup3\n        /* \"#utility.yul\":2677:2696   */\n      mstore\n        /* \"#utility.yul\":2729:2733   */\n      0x20\n        /* \"#utility.yul\":2724:2727   */\n      dup3\n        /* \"#utility.yul\":2720:2734   */\n      add\n        /* \"#utility.yul\":2705:2734   */\n      swap1\n      pop\n        /* \"#utility.yul\":2571:2740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2746:2918   */\n    tag_108:\n        /* \"#utility.yul\":2886:2910   */\n      0x4e6f742074686520636f6e7472616374206f776e657200000000000000000000\n        /* \"#utility.yul\":2882:2883   */\n      0x00\n        /* \"#utility.yul\":2874:2880   */\n      dup3\n        /* \"#utility.yul\":2870:2884   */\n      add\n        /* \"#utility.yul\":2863:2911   */\n      mstore\n        /* \"#utility.yul\":2746:2918   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2924:3290   */\n    tag_109:\n        /* \"#utility.yul\":3066:3069   */\n      0x00\n        /* \"#utility.yul\":3087:3154   */\n      tag_159\n        /* \"#utility.yul\":3151:3153   */\n      0x16\n        /* \"#utility.yul\":3146:3149   */\n      dup4\n        /* \"#utility.yul\":3087:3154   */\n      tag_107\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":3080:3154   */\n      swap2\n      pop\n        /* \"#utility.yul\":3163:3256   */\n      tag_160\n        /* \"#utility.yul\":3252:3255   */\n      dup3\n        /* \"#utility.yul\":3163:3256   */\n      tag_108\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3281:3283   */\n      0x20\n        /* \"#utility.yul\":3276:3279   */\n      dup3\n        /* \"#utility.yul\":3272:3284   */\n      add\n        /* \"#utility.yul\":3265:3284   */\n      swap1\n      pop\n        /* \"#utility.yul\":2924:3290   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3296:3715   */\n    tag_42:\n        /* \"#utility.yul\":3462:3466   */\n      0x00\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3489:3498   */\n      dup3\n        /* \"#utility.yul\":3485:3503   */\n      add\n        /* \"#utility.yul\":3477:3503   */\n      swap1\n      pop\n        /* \"#utility.yul\":3549:3558   */\n      dup2\n        /* \"#utility.yul\":3543:3547   */\n      dup2\n        /* \"#utility.yul\":3539:3559   */\n      sub\n        /* \"#utility.yul\":3535:3536   */\n      0x00\n        /* \"#utility.yul\":3524:3533   */\n      dup4\n        /* \"#utility.yul\":3520:3537   */\n      add\n        /* \"#utility.yul\":3513:3560   */\n      mstore\n        /* \"#utility.yul\":3577:3708   */\n      tag_162\n        /* \"#utility.yul\":3703:3707   */\n      dup2\n        /* \"#utility.yul\":3577:3708   */\n      tag_109\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3569:3708   */\n      swap1\n      pop\n        /* \"#utility.yul\":3296:3715   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3721:3864   */\n    tag_110:\n        /* \"#utility.yul\":3778:3783   */\n      0x00\n        /* \"#utility.yul\":3809:3815   */\n      dup2\n        /* \"#utility.yul\":3803:3816   */\n      mload\n        /* \"#utility.yul\":3794:3816   */\n      swap1\n      pop\n        /* \"#utility.yul\":3825:3858   */\n      tag_164\n        /* \"#utility.yul\":3852:3857   */\n      dup2\n        /* \"#utility.yul\":3825:3858   */\n      tag_105\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3721:3864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3870:4221   */\n    tag_48:\n        /* \"#utility.yul\":3940:3946   */\n      0x00\n        /* \"#utility.yul\":3989:3991   */\n      0x20\n        /* \"#utility.yul\":3977:3986   */\n      dup3\n        /* \"#utility.yul\":3968:3975   */\n      dup5\n        /* \"#utility.yul\":3964:3987   */\n      sub\n        /* \"#utility.yul\":3960:3992   */\n      slt\n        /* \"#utility.yul\":3957:4076   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":3995:4074   */\n      tag_167\n      tag_98\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":3957:4076   */\n    tag_166:\n        /* \"#utility.yul\":4115:4116   */\n      0x00\n        /* \"#utility.yul\":4140:4204   */\n      tag_168\n        /* \"#utility.yul\":4196:4203   */\n      dup5\n        /* \"#utility.yul\":4187:4193   */\n      dup3\n        /* \"#utility.yul\":4176:4185   */\n      dup6\n        /* \"#utility.yul\":4172:4194   */\n      add\n        /* \"#utility.yul\":4140:4204   */\n      tag_110\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4130:4204   */\n      swap2\n      pop\n        /* \"#utility.yul\":4086:4214   */\n      pop\n        /* \"#utility.yul\":3870:4221   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4227:4401   */\n    tag_111:\n        /* \"#utility.yul\":4367:4393   */\n      0x4e6f2055534454206c65667420746f2077697468647261770000000000000000\n        /* \"#utility.yul\":4363:4364   */\n      0x00\n        /* \"#utility.yul\":4355:4361   */\n      dup3\n        /* \"#utility.yul\":4351:4365   */\n      add\n        /* \"#utility.yul\":4344:4394   */\n      mstore\n        /* \"#utility.yul\":4227:4401   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4407:4773   */\n    tag_112:\n        /* \"#utility.yul\":4549:4552   */\n      0x00\n        /* \"#utility.yul\":4570:4637   */\n      tag_171\n        /* \"#utility.yul\":4634:4636   */\n      0x18\n        /* \"#utility.yul\":4629:4632   */\n      dup4\n        /* \"#utility.yul\":4570:4637   */\n      tag_107\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4563:4637   */\n      swap2\n      pop\n        /* \"#utility.yul\":4646:4739   */\n      tag_172\n        /* \"#utility.yul\":4735:4738   */\n      dup3\n        /* \"#utility.yul\":4646:4739   */\n      tag_111\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"#utility.yul\":4759:4762   */\n      dup3\n        /* \"#utility.yul\":4755:4767   */\n      add\n        /* \"#utility.yul\":4748:4767   */\n      swap1\n      pop\n        /* \"#utility.yul\":4407:4773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4779:5198   */\n    tag_51:\n        /* \"#utility.yul\":4945:4949   */\n      0x00\n        /* \"#utility.yul\":4983:4985   */\n      0x20\n        /* \"#utility.yul\":4972:4981   */\n      dup3\n        /* \"#utility.yul\":4968:4986   */\n      add\n        /* \"#utility.yul\":4960:4986   */\n      swap1\n      pop\n        /* \"#utility.yul\":5032:5041   */\n      dup2\n        /* \"#utility.yul\":5026:5030   */\n      dup2\n        /* \"#utility.yul\":5022:5042   */\n      sub\n        /* \"#utility.yul\":5018:5019   */\n      0x00\n        /* \"#utility.yul\":5007:5016   */\n      dup4\n        /* \"#utility.yul\":5003:5020   */\n      add\n        /* \"#utility.yul\":4996:5043   */\n      mstore\n        /* \"#utility.yul\":5060:5191   */\n      tag_174\n        /* \"#utility.yul\":5186:5190   */\n      dup2\n        /* \"#utility.yul\":5060:5191   */\n      tag_112\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":5052:5191   */\n      swap1\n      pop\n        /* \"#utility.yul\":4779:5198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5204:5536   */\n    tag_53:\n        /* \"#utility.yul\":5325:5329   */\n      0x00\n        /* \"#utility.yul\":5363:5365   */\n      0x40\n        /* \"#utility.yul\":5352:5361   */\n      dup3\n        /* \"#utility.yul\":5348:5366   */\n      add\n        /* \"#utility.yul\":5340:5366   */\n      swap1\n      pop\n        /* \"#utility.yul\":5376:5447   */\n      tag_176\n        /* \"#utility.yul\":5444:5445   */\n      0x00\n        /* \"#utility.yul\":5433:5442   */\n      dup4\n        /* \"#utility.yul\":5429:5446   */\n      add\n        /* \"#utility.yul\":5420:5426   */\n      dup6\n        /* \"#utility.yul\":5376:5447   */\n      tag_104\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":5457:5529   */\n      tag_177\n        /* \"#utility.yul\":5525:5527   */\n      0x20\n        /* \"#utility.yul\":5514:5523   */\n      dup4\n        /* \"#utility.yul\":5510:5528   */\n      add\n        /* \"#utility.yul\":5501:5507   */\n      dup5\n        /* \"#utility.yul\":5457:5529   */\n      tag_96\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5204:5536   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5632   */\n    tag_113:\n        /* \"#utility.yul\":5576:5583   */\n      0x00\n        /* \"#utility.yul\":5619:5624   */\n      dup2\n        /* \"#utility.yul\":5612:5625   */\n      iszero\n        /* \"#utility.yul\":5605:5626   */\n      iszero\n        /* \"#utility.yul\":5594:5626   */\n      swap1\n      pop\n        /* \"#utility.yul\":5542:5632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5638:5754   */\n    tag_114:\n        /* \"#utility.yul\":5708:5729   */\n      tag_180\n        /* \"#utility.yul\":5723:5728   */\n      dup2\n        /* \"#utility.yul\":5708:5729   */\n      tag_113\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5701:5706   */\n      dup2\n        /* \"#utility.yul\":5698:5730   */\n      eq\n        /* \"#utility.yul\":5688:5748   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":5744:5745   */\n      0x00\n        /* \"#utility.yul\":5741:5742   */\n      dup1\n        /* \"#utility.yul\":5734:5746   */\n      revert\n        /* \"#utility.yul\":5688:5748   */\n    tag_181:\n        /* \"#utility.yul\":5638:5754   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5760:5897   */\n    tag_115:\n        /* \"#utility.yul\":5814:5819   */\n      0x00\n        /* \"#utility.yul\":5845:5851   */\n      dup2\n        /* \"#utility.yul\":5839:5852   */\n      mload\n        /* \"#utility.yul\":5830:5852   */\n      swap1\n      pop\n        /* \"#utility.yul\":5861:5891   */\n      tag_183\n        /* \"#utility.yul\":5885:5890   */\n      dup2\n        /* \"#utility.yul\":5861:5891   */\n      tag_114\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":5760:5897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5903:6248   */\n    tag_57:\n        /* \"#utility.yul\":5970:5976   */\n      0x00\n        /* \"#utility.yul\":6019:6021   */\n      0x20\n        /* \"#utility.yul\":6007:6016   */\n      dup3\n        /* \"#utility.yul\":5998:6005   */\n      dup5\n        /* \"#utility.yul\":5994:6017   */\n      sub\n        /* \"#utility.yul\":5990:6022   */\n      slt\n        /* \"#utility.yul\":5987:6106   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":6025:6104   */\n      tag_186\n      tag_98\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5987:6106   */\n    tag_185:\n        /* \"#utility.yul\":6145:6146   */\n      0x00\n        /* \"#utility.yul\":6170:6231   */\n      tag_187\n        /* \"#utility.yul\":6223:6230   */\n      dup5\n        /* \"#utility.yul\":6214:6220   */\n      dup3\n        /* \"#utility.yul\":6203:6212   */\n      dup6\n        /* \"#utility.yul\":6199:6221   */\n      add\n        /* \"#utility.yul\":6170:6231   */\n      tag_115\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6160:6231   */\n      swap2\n      pop\n        /* \"#utility.yul\":6116:6241   */\n      pop\n        /* \"#utility.yul\":5903:6248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6254:6430   */\n    tag_116:\n        /* \"#utility.yul\":6394:6422   */\n      0x4e6f20746f6b656e73206c65667420746f207769746864726177000000000000\n        /* \"#utility.yul\":6390:6391   */\n      0x00\n        /* \"#utility.yul\":6382:6388   */\n      dup3\n        /* \"#utility.yul\":6378:6392   */\n      add\n        /* \"#utility.yul\":6371:6423   */\n      mstore\n        /* \"#utility.yul\":6254:6430   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6436:6802   */\n    tag_117:\n        /* \"#utility.yul\":6578:6581   */\n      0x00\n        /* \"#utility.yul\":6599:6666   */\n      tag_190\n        /* \"#utility.yul\":6663:6665   */\n      0x1a\n        /* \"#utility.yul\":6658:6661   */\n      dup4\n        /* \"#utility.yul\":6599:6666   */\n      tag_107\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":6592:6666   */\n      swap2\n      pop\n        /* \"#utility.yul\":6675:6768   */\n      tag_191\n        /* \"#utility.yul\":6764:6767   */\n      dup3\n        /* \"#utility.yul\":6675:6768   */\n      tag_116\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":6793:6795   */\n      0x20\n        /* \"#utility.yul\":6788:6791   */\n      dup3\n        /* \"#utility.yul\":6784:6796   */\n      add\n        /* \"#utility.yul\":6777:6796   */\n      swap1\n      pop\n        /* \"#utility.yul\":6436:6802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6808:7227   */\n    tag_68:\n        /* \"#utility.yul\":6974:6978   */\n      0x00\n        /* \"#utility.yul\":7012:7014   */\n      0x20\n        /* \"#utility.yul\":7001:7010   */\n      dup3\n        /* \"#utility.yul\":6997:7015   */\n      add\n        /* \"#utility.yul\":6989:7015   */\n      swap1\n      pop\n        /* \"#utility.yul\":7061:7070   */\n      dup2\n        /* \"#utility.yul\":7055:7059   */\n      dup2\n        /* \"#utility.yul\":7051:7071   */\n      sub\n        /* \"#utility.yul\":7047:7048   */\n      0x00\n        /* \"#utility.yul\":7036:7045   */\n      dup4\n        /* \"#utility.yul\":7032:7049   */\n      add\n        /* \"#utility.yul\":7025:7072   */\n      mstore\n        /* \"#utility.yul\":7089:7220   */\n      tag_193\n        /* \"#utility.yul\":7215:7219   */\n      dup2\n        /* \"#utility.yul\":7089:7220   */\n      tag_117\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":7081:7220   */\n      swap1\n      pop\n        /* \"#utility.yul\":6808:7227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7233:7413   */\n    tag_118:\n        /* \"#utility.yul\":7281:7358   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7278:7279   */\n      0x00\n        /* \"#utility.yul\":7271:7359   */\n      mstore\n        /* \"#utility.yul\":7378:7382   */\n      0x12\n        /* \"#utility.yul\":7375:7376   */\n      0x04\n        /* \"#utility.yul\":7368:7383   */\n      mstore\n        /* \"#utility.yul\":7402:7406   */\n      0x24\n        /* \"#utility.yul\":7399:7400   */\n      0x00\n        /* \"#utility.yul\":7392:7407   */\n      revert\n        /* \"#utility.yul\":7419:7599   */\n    tag_119:\n        /* \"#utility.yul\":7467:7544   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7464:7465   */\n      0x00\n        /* \"#utility.yul\":7457:7545   */\n      mstore\n        /* \"#utility.yul\":7564:7568   */\n      0x11\n        /* \"#utility.yul\":7561:7562   */\n      0x04\n        /* \"#utility.yul\":7554:7569   */\n      mstore\n        /* \"#utility.yul\":7588:7592   */\n      0x24\n        /* \"#utility.yul\":7585:7586   */\n      0x00\n        /* \"#utility.yul\":7578:7593   */\n      revert\n        /* \"#utility.yul\":7605:7790   */\n    tag_75:\n        /* \"#utility.yul\":7645:7646   */\n      0x00\n        /* \"#utility.yul\":7662:7682   */\n      tag_197\n        /* \"#utility.yul\":7680:7681   */\n      dup3\n        /* \"#utility.yul\":7662:7682   */\n      tag_95\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":7657:7682   */\n      swap2\n      pop\n        /* \"#utility.yul\":7696:7716   */\n      tag_198\n        /* \"#utility.yul\":7714:7715   */\n      dup4\n        /* \"#utility.yul\":7696:7716   */\n      tag_95\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":7691:7716   */\n      swap3\n      pop\n        /* \"#utility.yul\":7735:7736   */\n      dup3\n        /* \"#utility.yul\":7725:7760   */\n      tag_199\n      jumpi\n        /* \"#utility.yul\":7740:7758   */\n      tag_200\n      tag_118\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":7725:7760   */\n    tag_199:\n        /* \"#utility.yul\":7782:7783   */\n      dup3\n        /* \"#utility.yul\":7779:7780   */\n      dup3\n        /* \"#utility.yul\":7775:7784   */\n      div\n        /* \"#utility.yul\":7770:7784   */\n      swap1\n      pop\n        /* \"#utility.yul\":7605:7790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7796:7971   */\n    tag_120:\n        /* \"#utility.yul\":7936:7963   */\n      0x496e73756666696369656e7420555344542062616c616e636500000000000000\n        /* \"#utility.yul\":7932:7933   */\n      0x00\n        /* \"#utility.yul\":7924:7930   */\n      dup3\n        /* \"#utility.yul\":7920:7934   */\n      add\n        /* \"#utility.yul\":7913:7964   */\n      mstore\n        /* \"#utility.yul\":7796:7971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7977:8343   */\n    tag_121:\n        /* \"#utility.yul\":8119:8122   */\n      0x00\n        /* \"#utility.yul\":8140:8207   */\n      tag_203\n        /* \"#utility.yul\":8204:8206   */\n      0x19\n        /* \"#utility.yul\":8199:8202   */\n      dup4\n        /* \"#utility.yul\":8140:8207   */\n      tag_107\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":8133:8207   */\n      swap2\n      pop\n        /* \"#utility.yul\":8216:8309   */\n      tag_204\n        /* \"#utility.yul\":8305:8308   */\n      dup3\n        /* \"#utility.yul\":8216:8309   */\n      tag_120\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":8334:8336   */\n      0x20\n        /* \"#utility.yul\":8329:8332   */\n      dup3\n        /* \"#utility.yul\":8325:8337   */\n      add\n        /* \"#utility.yul\":8318:8337   */\n      swap1\n      pop\n        /* \"#utility.yul\":7977:8343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8349:8768   */\n    tag_82:\n        /* \"#utility.yul\":8515:8519   */\n      0x00\n        /* \"#utility.yul\":8553:8555   */\n      0x20\n        /* \"#utility.yul\":8542:8551   */\n      dup3\n        /* \"#utility.yul\":8538:8556   */\n      add\n        /* \"#utility.yul\":8530:8556   */\n      swap1\n      pop\n        /* \"#utility.yul\":8602:8611   */\n      dup2\n        /* \"#utility.yul\":8596:8600   */\n      dup2\n        /* \"#utility.yul\":8592:8612   */\n      sub\n        /* \"#utility.yul\":8588:8589   */\n      0x00\n        /* \"#utility.yul\":8577:8586   */\n      dup4\n        /* \"#utility.yul\":8573:8590   */\n      add\n        /* \"#utility.yul\":8566:8613   */\n      mstore\n        /* \"#utility.yul\":8630:8761   */\n      tag_206\n        /* \"#utility.yul\":8756:8760   */\n      dup2\n        /* \"#utility.yul\":8630:8761   */\n      tag_121\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":8622:8761   */\n      swap1\n      pop\n        /* \"#utility.yul\":8349:8768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8774:8965   */\n    tag_84:\n        /* \"#utility.yul\":8814:8817   */\n      0x00\n        /* \"#utility.yul\":8833:8853   */\n      tag_208\n        /* \"#utility.yul\":8851:8852   */\n      dup3\n        /* \"#utility.yul\":8833:8853   */\n      tag_95\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8828:8853   */\n      swap2\n      pop\n        /* \"#utility.yul\":8867:8887   */\n      tag_209\n        /* \"#utility.yul\":8885:8886   */\n      dup4\n        /* \"#utility.yul\":8867:8887   */\n      tag_95\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":8862:8887   */\n      swap3\n      pop\n        /* \"#utility.yul\":8910:8911   */\n      dup3\n        /* \"#utility.yul\":8907:8908   */\n      dup3\n        /* \"#utility.yul\":8903:8912   */\n      add\n        /* \"#utility.yul\":8896:8912   */\n      swap1\n      pop\n        /* \"#utility.yul\":8931:8934   */\n      dup1\n        /* \"#utility.yul\":8928:8929   */\n      dup3\n        /* \"#utility.yul\":8925:8935   */\n      gt\n        /* \"#utility.yul\":8922:8958   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":8938:8956   */\n      tag_211\n      tag_119\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8922:8958   */\n    tag_210:\n        /* \"#utility.yul\":8774:8965   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8971:9413   */\n    tag_86:\n        /* \"#utility.yul\":9120:9124   */\n      0x00\n        /* \"#utility.yul\":9158:9160   */\n      0x60\n        /* \"#utility.yul\":9147:9156   */\n      dup3\n        /* \"#utility.yul\":9143:9161   */\n      add\n        /* \"#utility.yul\":9135:9161   */\n      swap1\n      pop\n        /* \"#utility.yul\":9171:9242   */\n      tag_213\n        /* \"#utility.yul\":9239:9240   */\n      0x00\n        /* \"#utility.yul\":9228:9237   */\n      dup4\n        /* \"#utility.yul\":9224:9241   */\n      add\n        /* \"#utility.yul\":9215:9221   */\n      dup7\n        /* \"#utility.yul\":9171:9242   */\n      tag_104\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":9252:9324   */\n      tag_214\n        /* \"#utility.yul\":9320:9322   */\n      0x20\n        /* \"#utility.yul\":9309:9318   */\n      dup4\n        /* \"#utility.yul\":9305:9323   */\n      add\n        /* \"#utility.yul\":9296:9302   */\n      dup6\n        /* \"#utility.yul\":9252:9324   */\n      tag_104\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":9334:9406   */\n      tag_215\n        /* \"#utility.yul\":9402:9404   */\n      0x40\n        /* \"#utility.yul\":9391:9400   */\n      dup4\n        /* \"#utility.yul\":9387:9405   */\n      add\n        /* \"#utility.yul\":9378:9384   */\n      dup5\n        /* \"#utility.yul\":9334:9406   */\n      tag_96\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8971:9413   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122039b3e50b5a1b05500a429709c40ae19f7114aab694730a5db1615c39d2b94b7964736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1107": {
									"entryPoint": null,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040527355d398326f99059ff775485246999027b319795560025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550739c904076c2d96641507b211ee3e499872713dd2960035f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801560b6575f80fd5b505f8081905550610d56806100ca5f395ff3fe608060405260043610610058575f3560e01c806312065fe014610063578063164500921461008d57806359db80f8146100b75780638afbf669146100df5780638da5cb5b146100f5578063bcd2f64a1461011f5761005f565b3661005f57005b5f80fd5b34801561006e575f80fd5b50610077610147565b6040516100849190610899565b60405180910390f35b348015610098575f80fd5b506100a161018b565b6040516100ae9190610899565b60405180910390f35b3480156100c2575f80fd5b506100dd60048036038101906100d89190610910565b610190565b005b3480156100ea575f80fd5b506100f361039e565b005b348015610100575f80fd5b506101096105cc565b604051610116919061094a565b60405180910390f35b34801561012a575f80fd5b506101456004803603810190610140919061098d565b6105f1565b005b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f5481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610a12565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161027a919061094a565b602060405180830381865afa158015610295573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102b99190610a44565b90505f81116102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f490610ab9565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610359929190610ad7565b6020604051808303815f875af1158015610375573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103999190610b33565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042490610a12565b60405180910390fd5b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610488919061094a565b602060405180830381865afa1580156104a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c79190610a44565b90505f811161050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290610ba8565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610588929190610ad7565b6020604051808303815f875af11580156105a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c89190610b33565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6001826105ff9190610c20565b90508060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161065c919061094a565b602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b9190610a44565b10156106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610c9a565b60405180910390fd5b805f546106e99190610cb8565b5f8190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161074c93929190610ceb565b6020604051808303815f875af1158015610768573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061078c9190610b33565b5060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107e9929190610ad7565b6020604051808303815f875af1158015610805573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108299190610b33565b508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108769190610cb8565b925050819055505050565b5f819050919050565b61089381610881565b82525050565b5f6020820190506108ac5f83018461088a565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108df826108b6565b9050919050565b6108ef816108d5565b81146108f9575f80fd5b50565b5f8135905061090a816108e6565b92915050565b5f60208284031215610925576109246108b2565b5b5f610932848285016108fc565b91505092915050565b610944816108d5565b82525050565b5f60208201905061095d5f83018461093b565b92915050565b61096c81610881565b8114610976575f80fd5b50565b5f8135905061098781610963565b92915050565b5f602082840312156109a2576109a16108b2565b5b5f6109af84828501610979565b91505092915050565b5f82825260208201905092915050565b7f4e6f742074686520636f6e7472616374206f776e6572000000000000000000005f82015250565b5f6109fc6016836109b8565b9150610a07826109c8565b602082019050919050565b5f6020820190508181035f830152610a29816109f0565b9050919050565b5f81519050610a3e81610963565b92915050565b5f60208284031215610a5957610a586108b2565b5b5f610a6684828501610a30565b91505092915050565b7f4e6f2055534454206c65667420746f20776974686472617700000000000000005f82015250565b5f610aa36018836109b8565b9150610aae82610a6f565b602082019050919050565b5f6020820190508181035f830152610ad081610a97565b9050919050565b5f604082019050610aea5f83018561093b565b610af7602083018461088a565b9392505050565b5f8115159050919050565b610b1281610afe565b8114610b1c575f80fd5b50565b5f81519050610b2d81610b09565b92915050565b5f60208284031215610b4857610b476108b2565b5b5f610b5584828501610b1f565b91505092915050565b7f4e6f20746f6b656e73206c65667420746f2077697468647261770000000000005f82015250565b5f610b92601a836109b8565b9150610b9d82610b5e565b602082019050919050565b5f6020820190508181035f830152610bbf81610b86565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c2a82610881565b9150610c3583610881565b925082610c4557610c44610bc6565b5b828204905092915050565b7f496e73756666696369656e7420555344542062616c616e6365000000000000005f82015250565b5f610c846019836109b8565b9150610c8f82610c50565b602082019050919050565b5f6020820190508181035f830152610cb181610c78565b9050919050565b5f610cc282610881565b9150610ccd83610881565b9250828201905080821115610ce557610ce4610bf3565b5b92915050565b5f606082019050610cfe5f83018661093b565b610d0b602083018561093b565b610d18604083018461088a565b94935050505056fea264697066735822122039b3e50b5a1b05500a429709c40ae19f7114aab694730a5db1615c39d2b94b7964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH20 0x55D398326F99059FF775485246999027B3197955 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH20 0x9C904076C2D96641507B211EE3E499872713DD29 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0xB6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0xD56 DUP1 PUSH2 0xCA PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x16450092 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x59DB80F8 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x8AFBF669 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xBCD2F64A EQ PUSH2 0x11F JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH2 0x147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x39E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x359 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP1 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x768 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78C SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x881 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AC PUSH0 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8DF DUP3 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EF DUP2 PUSH2 0x8D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x90A DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x932 DUP5 DUP3 DUP6 ADD PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0x8D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95D PUSH0 DUP4 ADD DUP5 PUSH2 0x93B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96C DUP2 PUSH2 0x881 JUMP JUMPDEST DUP2 EQ PUSH2 0x976 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x987 DUP2 PUSH2 0x963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A1 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9AF DUP5 DUP3 DUP6 ADD PUSH2 0x979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742074686520636F6E7472616374206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9FC PUSH1 0x16 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA07 DUP3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA29 DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA3E DUP2 PUSH2 0x963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA58 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2055534454206C65667420746F2077697468647261770000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 PUSH1 0x18 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xAAE DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAD0 DUP2 PUSH2 0xA97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEA PUSH0 DUP4 ADD DUP6 PUSH2 0x93B JUMP JUMPDEST PUSH2 0xAF7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0xAFE JUMP JUMPDEST DUP2 EQ PUSH2 0xB1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB2D DUP2 PUSH2 0xB09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB55 DUP5 DUP3 DUP6 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206C65667420746F207769746864726177000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB92 PUSH1 0x1A DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9D DUP3 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBF DUP2 PUSH2 0xB86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC2A DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP2 POP PUSH2 0xC35 DUP4 PUSH2 0x881 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC45 JUMPI PUSH2 0xC44 PUSH2 0xBC6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420555344542062616C616E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC84 PUSH1 0x19 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP3 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCB1 DUP2 PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC2 DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP4 PUSH2 0x881 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCFE PUSH0 DUP4 ADD DUP7 PUSH2 0x93B JUMP JUMPDEST PUSH2 0xD0B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x93B JUMP JUMPDEST PUSH2 0xD18 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xB3 0xE5 SIGNEXTEND GAS SHL SDIV POP EXP TIMESTAMP SWAP8 MULMOD 0xC4 EXP 0xE1 SWAP16 PUSH18 0x14AAB694730A5DB1615C39D2B94B7964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "463:1442:10:-:0;;;317:42;549:34;;;;;;;;;;;;;;;;;;;;394:42;615:34;;;;;;;;;;;;;;;;;;;;861:45;;;;;;;;;;897:1;886:8;:12;;;;463:1442;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1087": {
									"entryPoint": null,
									"id": 1087,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokenWithUSDT_1163": {
									"entryPoint": 1521,
									"id": 1163,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getBalance_1174": {
									"entryPoint": 327,
									"id": 1174,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_1067": {
									"entryPoint": 1484,
									"id": 1067,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalCap_1065": {
									"entryPoint": 395,
									"id": 1065,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawRemainingTokens_1204": {
									"entryPoint": 926,
									"id": 1204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawUSDT_1236": {
									"entryPoint": 400,
									"id": 1236,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2847,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 2425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 3307,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2775,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2488,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3104,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2261,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3059,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169": {
									"entryPoint": 2671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694": {
									"entryPoint": 2910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83": {
									"entryPoint": 3152,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8": {
									"entryPoint": 2504,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9416:11",
										"nodeType": "YulBlock",
										"src": "0:9416:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:11",
													"nodeType": "YulBlock",
													"src": "52:32:11",
													"statements": [
														{
															"nativeSrc": "62:16:11",
															"nodeType": "YulAssignment",
															"src": "62:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:11",
																"nodeType": "YulIdentifier",
																"src": "73:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:77:11"
											},
											{
												"body": {
													"nativeSrc": "155:53:11",
													"nodeType": "YulBlock",
													"src": "155:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:11"
																		},
																		"nativeSrc": "177:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:11"
																},
																"nativeSrc": "165:37:11",
																"nodeType": "YulFunctionCall",
																"src": "165:37:11"
															},
															"nativeSrc": "165:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:11",
														"nodeType": "YulTypedName",
														"src": "143:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:11",
														"nodeType": "YulTypedName",
														"src": "150:3:11",
														"type": ""
													}
												],
												"src": "90:118:11"
											},
											{
												"body": {
													"nativeSrc": "312:124:11",
													"nodeType": "YulBlock",
													"src": "312:124:11",
													"statements": [
														{
															"nativeSrc": "322:26:11",
															"nodeType": "YulAssignment",
															"src": "322:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:11",
																		"nodeType": "YulLiteral",
																		"src": "345:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:11"
																},
																"nativeSrc": "330:18:11",
																"nodeType": "YulFunctionCall",
																"src": "330:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:11",
																				"nodeType": "YulLiteral",
																				"src": "426:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:11"
																		},
																		"nativeSrc": "411:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:11"
																},
																"nativeSrc": "358:71:11",
																"nodeType": "YulFunctionCall",
																"src": "358:71:11"
															},
															"nativeSrc": "358:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:11",
														"nodeType": "YulTypedName",
														"src": "284:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:11",
														"nodeType": "YulTypedName",
														"src": "296:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:11",
														"nodeType": "YulTypedName",
														"src": "307:4:11",
														"type": ""
													}
												],
												"src": "214:222:11"
											},
											{
												"body": {
													"nativeSrc": "482:35:11",
													"nodeType": "YulBlock",
													"src": "482:35:11",
													"statements": [
														{
															"nativeSrc": "492:19:11",
															"nodeType": "YulAssignment",
															"src": "492:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "508:2:11",
																		"nodeType": "YulLiteral",
																		"src": "508:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "502:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "502:5:11"
																},
																"nativeSrc": "502:9:11",
																"nodeType": "YulFunctionCall",
																"src": "502:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "492:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "442:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "475:6:11",
														"nodeType": "YulTypedName",
														"src": "475:6:11",
														"type": ""
													}
												],
												"src": "442:75:11"
											},
											{
												"body": {
													"nativeSrc": "612:28:11",
													"nodeType": "YulBlock",
													"src": "612:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "629:1:11",
																		"nodeType": "YulLiteral",
																		"src": "629:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "632:1:11",
																		"nodeType": "YulLiteral",
																		"src": "632:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "622:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "622:6:11"
																},
																"nativeSrc": "622:12:11",
																"nodeType": "YulFunctionCall",
																"src": "622:12:11"
															},
															"nativeSrc": "622:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "622:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "523:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "523:117:11"
											},
											{
												"body": {
													"nativeSrc": "735:28:11",
													"nodeType": "YulBlock",
													"src": "735:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "752:1:11",
																		"nodeType": "YulLiteral",
																		"src": "752:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "755:1:11",
																		"nodeType": "YulLiteral",
																		"src": "755:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "745:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "745:6:11"
																},
																"nativeSrc": "745:12:11",
																"nodeType": "YulFunctionCall",
																"src": "745:12:11"
															},
															"nativeSrc": "745:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "745:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "646:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "646:117:11"
											},
											{
												"body": {
													"nativeSrc": "814:81:11",
													"nodeType": "YulBlock",
													"src": "814:81:11",
													"statements": [
														{
															"nativeSrc": "824:65:11",
															"nodeType": "YulAssignment",
															"src": "824:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "839:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "839:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:42:11",
																		"nodeType": "YulLiteral",
																		"src": "846:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "835:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:11"
																},
																"nativeSrc": "835:54:11",
																"nodeType": "YulFunctionCall",
																"src": "835:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "824:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "824:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "769:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "796:5:11",
														"nodeType": "YulTypedName",
														"src": "796:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "806:7:11",
														"nodeType": "YulTypedName",
														"src": "806:7:11",
														"type": ""
													}
												],
												"src": "769:126:11"
											},
											{
												"body": {
													"nativeSrc": "946:51:11",
													"nodeType": "YulBlock",
													"src": "946:51:11",
													"statements": [
														{
															"nativeSrc": "956:35:11",
															"nodeType": "YulAssignment",
															"src": "956:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "985:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "985:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "967:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "967:17:11"
																},
																"nativeSrc": "967:24:11",
																"nodeType": "YulFunctionCall",
																"src": "967:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "956:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "956:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "901:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "928:5:11",
														"nodeType": "YulTypedName",
														"src": "928:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "938:7:11",
														"nodeType": "YulTypedName",
														"src": "938:7:11",
														"type": ""
													}
												],
												"src": "901:96:11"
											},
											{
												"body": {
													"nativeSrc": "1046:79:11",
													"nodeType": "YulBlock",
													"src": "1046:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:11",
																"nodeType": "YulBlock",
																"src": "1103:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:11",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:11"
																			},
																			"nativeSrc": "1105:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:11"
																		},
																		"nativeSrc": "1105:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1076:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:11"
																				},
																				"nativeSrc": "1076:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:11"
																		},
																		"nativeSrc": "1066:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:11"
																},
																"nativeSrc": "1059:43:11",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:11"
															},
															"nativeSrc": "1056:63:11",
															"nodeType": "YulIf",
															"src": "1056:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1003:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:11",
														"nodeType": "YulTypedName",
														"src": "1039:5:11",
														"type": ""
													}
												],
												"src": "1003:122:11"
											},
											{
												"body": {
													"nativeSrc": "1183:87:11",
													"nodeType": "YulBlock",
													"src": "1183:87:11",
													"statements": [
														{
															"nativeSrc": "1193:29:11",
															"nodeType": "YulAssignment",
															"src": "1193:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:11"
																},
																"nativeSrc": "1202:20:11",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1231:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:11"
																},
																"nativeSrc": "1231:33:11",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:11"
															},
															"nativeSrc": "1231:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1131:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:11",
														"nodeType": "YulTypedName",
														"src": "1161:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:11",
														"nodeType": "YulTypedName",
														"src": "1169:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:11",
														"nodeType": "YulTypedName",
														"src": "1177:5:11",
														"type": ""
													}
												],
												"src": "1131:139:11"
											},
											{
												"body": {
													"nativeSrc": "1342:263:11",
													"nodeType": "YulBlock",
													"src": "1342:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:11",
																"nodeType": "YulBlock",
																"src": "1388:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:11"
																			},
																			"nativeSrc": "1390:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:11"
																		},
																		"nativeSrc": "1390:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:11"
																		},
																		"nativeSrc": "1359:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:11"
																},
																"nativeSrc": "1355:32:11",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:11"
															},
															"nativeSrc": "1352:119:11",
															"nodeType": "YulIf",
															"src": "1352:119:11"
														},
														{
															"nativeSrc": "1481:117:11",
															"nodeType": "YulBlock",
															"src": "1481:117:11",
															"statements": [
																{
																	"nativeSrc": "1496:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:11",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:11"
																				},
																				"nativeSrc": "1556:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1535:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:11"
																		},
																		"nativeSrc": "1535:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1276:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:11",
														"nodeType": "YulTypedName",
														"src": "1312:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:11",
														"nodeType": "YulTypedName",
														"src": "1323:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:11",
														"nodeType": "YulTypedName",
														"src": "1335:6:11",
														"type": ""
													}
												],
												"src": "1276:329:11"
											},
											{
												"body": {
													"nativeSrc": "1676:53:11",
													"nodeType": "YulBlock",
													"src": "1676:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1698:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:11"
																		},
																		"nativeSrc": "1698:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:11"
																},
																"nativeSrc": "1686:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:11"
															},
															"nativeSrc": "1686:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1611:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:11",
														"nodeType": "YulTypedName",
														"src": "1664:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:11",
														"nodeType": "YulTypedName",
														"src": "1671:3:11",
														"type": ""
													}
												],
												"src": "1611:118:11"
											},
											{
												"body": {
													"nativeSrc": "1833:124:11",
													"nodeType": "YulBlock",
													"src": "1833:124:11",
													"statements": [
														{
															"nativeSrc": "1843:26:11",
															"nodeType": "YulAssignment",
															"src": "1843:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:11"
																},
																"nativeSrc": "1851:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:11"
																		},
																		"nativeSrc": "1932:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1879:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:11"
																},
																"nativeSrc": "1879:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:11"
															},
															"nativeSrc": "1879:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1735:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:11",
														"nodeType": "YulTypedName",
														"src": "1805:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:11",
														"nodeType": "YulTypedName",
														"src": "1817:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:11",
														"nodeType": "YulTypedName",
														"src": "1828:4:11",
														"type": ""
													}
												],
												"src": "1735:222:11"
											},
											{
												"body": {
													"nativeSrc": "2006:79:11",
													"nodeType": "YulBlock",
													"src": "2006:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2063:16:11",
																"nodeType": "YulBlock",
																"src": "2063:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2072:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2072:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2075:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2075:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2065:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2065:6:11"
																			},
																			"nativeSrc": "2065:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2065:12:11"
																		},
																		"nativeSrc": "2065:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2065:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2029:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2029:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2054:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2054:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2036:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2036:17:11"
																				},
																				"nativeSrc": "2036:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2036:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2026:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2026:2:11"
																		},
																		"nativeSrc": "2026:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2026:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2019:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2019:6:11"
																},
																"nativeSrc": "2019:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2019:43:11"
															},
															"nativeSrc": "2016:63:11",
															"nodeType": "YulIf",
															"src": "2016:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1963:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1999:5:11",
														"nodeType": "YulTypedName",
														"src": "1999:5:11",
														"type": ""
													}
												],
												"src": "1963:122:11"
											},
											{
												"body": {
													"nativeSrc": "2143:87:11",
													"nodeType": "YulBlock",
													"src": "2143:87:11",
													"statements": [
														{
															"nativeSrc": "2153:29:11",
															"nodeType": "YulAssignment",
															"src": "2153:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2175:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2175:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2162:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2162:12:11"
																},
																"nativeSrc": "2162:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2162:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2153:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2153:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2218:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2218:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2191:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2191:26:11"
																},
																"nativeSrc": "2191:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2191:33:11"
															},
															"nativeSrc": "2191:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2191:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2091:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2121:6:11",
														"nodeType": "YulTypedName",
														"src": "2121:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2129:3:11",
														"nodeType": "YulTypedName",
														"src": "2129:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2137:5:11",
														"nodeType": "YulTypedName",
														"src": "2137:5:11",
														"type": ""
													}
												],
												"src": "2091:139:11"
											},
											{
												"body": {
													"nativeSrc": "2302:263:11",
													"nodeType": "YulBlock",
													"src": "2302:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2348:83:11",
																"nodeType": "YulBlock",
																"src": "2348:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2350:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2350:77:11"
																			},
																			"nativeSrc": "2350:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2350:79:11"
																		},
																		"nativeSrc": "2350:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2350:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2323:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2332:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2332:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2319:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2319:3:11"
																		},
																		"nativeSrc": "2319:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2319:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2344:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2344:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2315:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2315:3:11"
																},
																"nativeSrc": "2315:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2315:32:11"
															},
															"nativeSrc": "2312:119:11",
															"nodeType": "YulIf",
															"src": "2312:119:11"
														},
														{
															"nativeSrc": "2441:117:11",
															"nodeType": "YulBlock",
															"src": "2441:117:11",
															"statements": [
																{
																	"nativeSrc": "2456:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2456:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2470:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2470:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2460:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2460:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2485:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2485:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2520:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2520:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2531:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2531:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2516:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2516:3:11"
																				},
																				"nativeSrc": "2516:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2516:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2540:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2540:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2495:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2495:20:11"
																		},
																		"nativeSrc": "2495:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2495:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2485:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2485:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2236:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2272:9:11",
														"nodeType": "YulTypedName",
														"src": "2272:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2283:7:11",
														"nodeType": "YulTypedName",
														"src": "2283:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2295:6:11",
														"nodeType": "YulTypedName",
														"src": "2295:6:11",
														"type": ""
													}
												],
												"src": "2236:329:11"
											},
											{
												"body": {
													"nativeSrc": "2667:73:11",
													"nodeType": "YulBlock",
													"src": "2667:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2684:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2684:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2689:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2689:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2677:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2677:6:11"
																},
																"nativeSrc": "2677:19:11",
																"nodeType": "YulFunctionCall",
																"src": "2677:19:11"
															},
															"nativeSrc": "2677:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "2677:19:11"
														},
														{
															"nativeSrc": "2705:29:11",
															"nodeType": "YulAssignment",
															"src": "2705:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2724:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2729:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2729:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2720:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:11"
																},
																"nativeSrc": "2720:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2720:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2705:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "2705:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2571:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2639:3:11",
														"nodeType": "YulTypedName",
														"src": "2639:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2644:6:11",
														"nodeType": "YulTypedName",
														"src": "2644:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2655:11:11",
														"nodeType": "YulTypedName",
														"src": "2655:11:11",
														"type": ""
													}
												],
												"src": "2571:169:11"
											},
											{
												"body": {
													"nativeSrc": "2852:66:11",
													"nodeType": "YulBlock",
													"src": "2852:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2874:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2874:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2882:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2882:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2870:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2870:3:11"
																		},
																		"nativeSrc": "2870:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2870:14:11"
																	},
																	{
																		"hexValue": "4e6f742074686520636f6e7472616374206f776e6572",
																		"kind": "string",
																		"nativeSrc": "2886:24:11",
																		"nodeType": "YulLiteral",
																		"src": "2886:24:11",
																		"type": "",
																		"value": "Not the contract owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2863:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2863:6:11"
																},
																"nativeSrc": "2863:48:11",
																"nodeType": "YulFunctionCall",
																"src": "2863:48:11"
															},
															"nativeSrc": "2863:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "2863:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8",
												"nativeSrc": "2746:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2844:6:11",
														"nodeType": "YulTypedName",
														"src": "2844:6:11",
														"type": ""
													}
												],
												"src": "2746:172:11"
											},
											{
												"body": {
													"nativeSrc": "3070:220:11",
													"nodeType": "YulBlock",
													"src": "3070:220:11",
													"statements": [
														{
															"nativeSrc": "3080:74:11",
															"nodeType": "YulAssignment",
															"src": "3080:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3146:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3146:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3151:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3151:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3087:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "3087:58:11"
																},
																"nativeSrc": "3087:67:11",
																"nodeType": "YulFunctionCall",
																"src": "3087:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3080:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3080:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3252:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3252:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8",
																	"nativeSrc": "3163:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "3163:88:11"
																},
																"nativeSrc": "3163:93:11",
																"nodeType": "YulFunctionCall",
																"src": "3163:93:11"
															},
															"nativeSrc": "3163:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "3163:93:11"
														},
														{
															"nativeSrc": "3265:19:11",
															"nodeType": "YulAssignment",
															"src": "3265:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3276:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3276:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3281:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3281:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3272:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3272:3:11"
																},
																"nativeSrc": "3272:12:11",
																"nodeType": "YulFunctionCall",
																"src": "3272:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3265:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3265:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2924:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3058:3:11",
														"nodeType": "YulTypedName",
														"src": "3058:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3066:3:11",
														"nodeType": "YulTypedName",
														"src": "3066:3:11",
														"type": ""
													}
												],
												"src": "2924:366:11"
											},
											{
												"body": {
													"nativeSrc": "3467:248:11",
													"nodeType": "YulBlock",
													"src": "3467:248:11",
													"statements": [
														{
															"nativeSrc": "3477:26:11",
															"nodeType": "YulAssignment",
															"src": "3477:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3489:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3489:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3500:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3485:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3485:3:11"
																},
																"nativeSrc": "3485:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3485:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3477:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3477:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3524:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3524:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3535:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3535:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3520:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3520:3:11"
																		},
																		"nativeSrc": "3520:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3520:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3543:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "3543:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3549:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3549:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3539:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3539:3:11"
																		},
																		"nativeSrc": "3539:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3539:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3513:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3513:6:11"
																},
																"nativeSrc": "3513:47:11",
																"nodeType": "YulFunctionCall",
																"src": "3513:47:11"
															},
															"nativeSrc": "3513:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "3513:47:11"
														},
														{
															"nativeSrc": "3569:139:11",
															"nodeType": "YulAssignment",
															"src": "3569:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3703:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3703:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3577:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "3577:124:11"
																},
																"nativeSrc": "3577:131:11",
																"nodeType": "YulFunctionCall",
																"src": "3577:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3569:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3569:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3296:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3447:9:11",
														"nodeType": "YulTypedName",
														"src": "3447:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3462:4:11",
														"nodeType": "YulTypedName",
														"src": "3462:4:11",
														"type": ""
													}
												],
												"src": "3296:419:11"
											},
											{
												"body": {
													"nativeSrc": "3784:80:11",
													"nodeType": "YulBlock",
													"src": "3784:80:11",
													"statements": [
														{
															"nativeSrc": "3794:22:11",
															"nodeType": "YulAssignment",
															"src": "3794:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3809:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3809:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3803:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3803:5:11"
																},
																"nativeSrc": "3803:13:11",
																"nodeType": "YulFunctionCall",
																"src": "3803:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3794:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3794:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3852:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3852:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3825:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3825:26:11"
																},
																"nativeSrc": "3825:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3825:33:11"
															},
															"nativeSrc": "3825:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3825:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "3721:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3762:6:11",
														"nodeType": "YulTypedName",
														"src": "3762:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3770:3:11",
														"nodeType": "YulTypedName",
														"src": "3770:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3778:5:11",
														"nodeType": "YulTypedName",
														"src": "3778:5:11",
														"type": ""
													}
												],
												"src": "3721:143:11"
											},
											{
												"body": {
													"nativeSrc": "3947:274:11",
													"nodeType": "YulBlock",
													"src": "3947:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3993:83:11",
																"nodeType": "YulBlock",
																"src": "3993:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3995:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3995:77:11"
																			},
																			"nativeSrc": "3995:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3995:79:11"
																		},
																		"nativeSrc": "3995:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3995:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3968:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3968:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3977:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3977:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3964:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3964:3:11"
																		},
																		"nativeSrc": "3964:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3964:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3989:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3989:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3960:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:11"
																},
																"nativeSrc": "3960:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3960:32:11"
															},
															"nativeSrc": "3957:119:11",
															"nodeType": "YulIf",
															"src": "3957:119:11"
														},
														{
															"nativeSrc": "4086:128:11",
															"nodeType": "YulBlock",
															"src": "4086:128:11",
															"statements": [
																{
																	"nativeSrc": "4101:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4101:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4115:1:11",
																		"nodeType": "YulLiteral",
																		"src": "4115:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4105:6:11",
																			"nodeType": "YulTypedName",
																			"src": "4105:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4130:74:11",
																	"nodeType": "YulAssignment",
																	"src": "4130:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4176:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "4176:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4187:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "4187:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4172:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "4172:3:11"
																				},
																				"nativeSrc": "4172:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "4172:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4196:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "4196:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "4140:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "4140:31:11"
																		},
																		"nativeSrc": "4140:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4140:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4130:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4130:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "3870:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3917:9:11",
														"nodeType": "YulTypedName",
														"src": "3917:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3928:7:11",
														"nodeType": "YulTypedName",
														"src": "3928:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3940:6:11",
														"nodeType": "YulTypedName",
														"src": "3940:6:11",
														"type": ""
													}
												],
												"src": "3870:351:11"
											},
											{
												"body": {
													"nativeSrc": "4333:68:11",
													"nodeType": "YulBlock",
													"src": "4333:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4355:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "4355:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4363:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4363:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4351:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4351:3:11"
																		},
																		"nativeSrc": "4351:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4351:14:11"
																	},
																	{
																		"hexValue": "4e6f2055534454206c65667420746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "4367:26:11",
																		"nodeType": "YulLiteral",
																		"src": "4367:26:11",
																		"type": "",
																		"value": "No USDT left to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4344:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4344:6:11"
																},
																"nativeSrc": "4344:50:11",
																"nodeType": "YulFunctionCall",
																"src": "4344:50:11"
															},
															"nativeSrc": "4344:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "4344:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169",
												"nativeSrc": "4227:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4325:6:11",
														"nodeType": "YulTypedName",
														"src": "4325:6:11",
														"type": ""
													}
												],
												"src": "4227:174:11"
											},
											{
												"body": {
													"nativeSrc": "4553:220:11",
													"nodeType": "YulBlock",
													"src": "4553:220:11",
													"statements": [
														{
															"nativeSrc": "4563:74:11",
															"nodeType": "YulAssignment",
															"src": "4563:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4629:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4629:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4634:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4634:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4570:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "4570:58:11"
																},
																"nativeSrc": "4570:67:11",
																"nodeType": "YulFunctionCall",
																"src": "4570:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4563:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4563:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4735:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4735:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169",
																	"nativeSrc": "4646:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "4646:88:11"
																},
																"nativeSrc": "4646:93:11",
																"nodeType": "YulFunctionCall",
																"src": "4646:93:11"
															},
															"nativeSrc": "4646:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "4646:93:11"
														},
														{
															"nativeSrc": "4748:19:11",
															"nodeType": "YulAssignment",
															"src": "4748:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4759:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4759:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4764:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4755:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4755:3:11"
																},
																"nativeSrc": "4755:12:11",
																"nodeType": "YulFunctionCall",
																"src": "4755:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4748:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4748:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4407:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4541:3:11",
														"nodeType": "YulTypedName",
														"src": "4541:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4549:3:11",
														"nodeType": "YulTypedName",
														"src": "4549:3:11",
														"type": ""
													}
												],
												"src": "4407:366:11"
											},
											{
												"body": {
													"nativeSrc": "4950:248:11",
													"nodeType": "YulBlock",
													"src": "4950:248:11",
													"statements": [
														{
															"nativeSrc": "4960:26:11",
															"nodeType": "YulAssignment",
															"src": "4960:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4972:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4972:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4983:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4983:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4968:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4968:3:11"
																},
																"nativeSrc": "4968:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4968:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4960:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4960:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5007:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5007:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5018:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5018:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5003:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5003:3:11"
																		},
																		"nativeSrc": "5003:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5003:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5026:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5026:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5032:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5032:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5022:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5022:3:11"
																		},
																		"nativeSrc": "5022:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5022:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4996:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4996:6:11"
																},
																"nativeSrc": "4996:47:11",
																"nodeType": "YulFunctionCall",
																"src": "4996:47:11"
															},
															"nativeSrc": "4996:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "4996:47:11"
														},
														{
															"nativeSrc": "5052:139:11",
															"nodeType": "YulAssignment",
															"src": "5052:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "5186:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "5186:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5060:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "5060:124:11"
																},
																"nativeSrc": "5060:131:11",
																"nodeType": "YulFunctionCall",
																"src": "5060:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5052:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5052:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4779:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4930:9:11",
														"nodeType": "YulTypedName",
														"src": "4930:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4945:4:11",
														"nodeType": "YulTypedName",
														"src": "4945:4:11",
														"type": ""
													}
												],
												"src": "4779:419:11"
											},
											{
												"body": {
													"nativeSrc": "5330:206:11",
													"nodeType": "YulBlock",
													"src": "5330:206:11",
													"statements": [
														{
															"nativeSrc": "5340:26:11",
															"nodeType": "YulAssignment",
															"src": "5340:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5352:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5352:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5363:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5363:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5348:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5348:3:11"
																},
																"nativeSrc": "5348:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5348:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5340:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5420:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5420:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5433:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5433:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5444:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5444:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5429:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5429:3:11"
																		},
																		"nativeSrc": "5429:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5429:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5376:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5376:43:11"
																},
																"nativeSrc": "5376:71:11",
																"nodeType": "YulFunctionCall",
																"src": "5376:71:11"
															},
															"nativeSrc": "5376:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "5376:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "5501:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5501:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5514:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5514:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5525:2:11",
																				"nodeType": "YulLiteral",
																				"src": "5525:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5510:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5510:3:11"
																		},
																		"nativeSrc": "5510:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5510:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5457:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "5457:43:11"
																},
																"nativeSrc": "5457:72:11",
																"nodeType": "YulFunctionCall",
																"src": "5457:72:11"
															},
															"nativeSrc": "5457:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "5457:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5204:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5294:9:11",
														"nodeType": "YulTypedName",
														"src": "5294:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5306:6:11",
														"nodeType": "YulTypedName",
														"src": "5306:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5314:6:11",
														"nodeType": "YulTypedName",
														"src": "5314:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5325:4:11",
														"nodeType": "YulTypedName",
														"src": "5325:4:11",
														"type": ""
													}
												],
												"src": "5204:332:11"
											},
											{
												"body": {
													"nativeSrc": "5584:48:11",
													"nodeType": "YulBlock",
													"src": "5584:48:11",
													"statements": [
														{
															"nativeSrc": "5594:32:11",
															"nodeType": "YulAssignment",
															"src": "5594:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5619:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5619:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5612:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "5612:6:11"
																		},
																		"nativeSrc": "5612:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5612:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5605:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5605:6:11"
																},
																"nativeSrc": "5605:21:11",
																"nodeType": "YulFunctionCall",
																"src": "5605:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5594:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "5594:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "5542:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5566:5:11",
														"nodeType": "YulTypedName",
														"src": "5566:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5576:7:11",
														"nodeType": "YulTypedName",
														"src": "5576:7:11",
														"type": ""
													}
												],
												"src": "5542:90:11"
											},
											{
												"body": {
													"nativeSrc": "5678:76:11",
													"nodeType": "YulBlock",
													"src": "5678:76:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "5732:16:11",
																"nodeType": "YulBlock",
																"src": "5732:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5741:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5741:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5744:1:11",
																					"nodeType": "YulLiteral",
																					"src": "5744:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5734:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5734:6:11"
																			},
																			"nativeSrc": "5734:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "5734:12:11"
																		},
																		"nativeSrc": "5734:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "5734:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5701:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "5701:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5723:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "5723:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "5708:14:11",
																					"nodeType": "YulIdentifier",
																					"src": "5708:14:11"
																				},
																				"nativeSrc": "5708:21:11",
																				"nodeType": "YulFunctionCall",
																				"src": "5708:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5698:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "5698:2:11"
																		},
																		"nativeSrc": "5698:32:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5698:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5691:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5691:6:11"
																},
																"nativeSrc": "5691:40:11",
																"nodeType": "YulFunctionCall",
																"src": "5691:40:11"
															},
															"nativeSrc": "5688:60:11",
															"nodeType": "YulIf",
															"src": "5688:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "5638:116:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5671:5:11",
														"nodeType": "YulTypedName",
														"src": "5671:5:11",
														"type": ""
													}
												],
												"src": "5638:116:11"
											},
											{
												"body": {
													"nativeSrc": "5820:77:11",
													"nodeType": "YulBlock",
													"src": "5820:77:11",
													"statements": [
														{
															"nativeSrc": "5830:22:11",
															"nodeType": "YulAssignment",
															"src": "5830:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5845:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5845:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5839:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5839:5:11"
																},
																"nativeSrc": "5839:13:11",
																"nodeType": "YulFunctionCall",
																"src": "5839:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5830:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "5830:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5885:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "5885:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "5861:23:11",
																	"nodeType": "YulIdentifier",
																	"src": "5861:23:11"
																},
																"nativeSrc": "5861:30:11",
																"nodeType": "YulFunctionCall",
																"src": "5861:30:11"
															},
															"nativeSrc": "5861:30:11",
															"nodeType": "YulExpressionStatement",
															"src": "5861:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "5760:137:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5798:6:11",
														"nodeType": "YulTypedName",
														"src": "5798:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5806:3:11",
														"nodeType": "YulTypedName",
														"src": "5806:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5814:5:11",
														"nodeType": "YulTypedName",
														"src": "5814:5:11",
														"type": ""
													}
												],
												"src": "5760:137:11"
											},
											{
												"body": {
													"nativeSrc": "5977:271:11",
													"nodeType": "YulBlock",
													"src": "5977:271:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "6023:83:11",
																"nodeType": "YulBlock",
																"src": "6023:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6025:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "6025:77:11"
																			},
																			"nativeSrc": "6025:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6025:79:11"
																		},
																		"nativeSrc": "6025:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6025:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5998:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "5998:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6007:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "6007:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5994:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:11"
																		},
																		"nativeSrc": "5994:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5994:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6019:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6019:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5990:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:11"
																},
																"nativeSrc": "5990:32:11",
																"nodeType": "YulFunctionCall",
																"src": "5990:32:11"
															},
															"nativeSrc": "5987:119:11",
															"nodeType": "YulIf",
															"src": "5987:119:11"
														},
														{
															"nativeSrc": "6116:125:11",
															"nodeType": "YulBlock",
															"src": "6116:125:11",
															"statements": [
																{
																	"nativeSrc": "6131:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6131:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6145:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6145:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6135:6:11",
																			"nodeType": "YulTypedName",
																			"src": "6135:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6160:71:11",
																	"nodeType": "YulAssignment",
																	"src": "6160:71:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6203:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "6203:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6214:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "6214:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6199:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "6199:3:11"
																				},
																				"nativeSrc": "6199:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "6199:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6223:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "6223:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "6170:28:11",
																			"nodeType": "YulIdentifier",
																			"src": "6170:28:11"
																		},
																		"nativeSrc": "6170:61:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6170:61:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6160:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "6160:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "5903:345:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5947:9:11",
														"nodeType": "YulTypedName",
														"src": "5947:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5958:7:11",
														"nodeType": "YulTypedName",
														"src": "5958:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5970:6:11",
														"nodeType": "YulTypedName",
														"src": "5970:6:11",
														"type": ""
													}
												],
												"src": "5903:345:11"
											},
											{
												"body": {
													"nativeSrc": "6360:70:11",
													"nodeType": "YulBlock",
													"src": "6360:70:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6382:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6382:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6390:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6390:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6378:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6378:3:11"
																		},
																		"nativeSrc": "6378:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6378:14:11"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73206c65667420746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "6394:28:11",
																		"nodeType": "YulLiteral",
																		"src": "6394:28:11",
																		"type": "",
																		"value": "No tokens left to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6371:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6371:6:11"
																},
																"nativeSrc": "6371:52:11",
																"nodeType": "YulFunctionCall",
																"src": "6371:52:11"
															},
															"nativeSrc": "6371:52:11",
															"nodeType": "YulExpressionStatement",
															"src": "6371:52:11"
														}
													]
												},
												"name": "store_literal_in_memory_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694",
												"nativeSrc": "6254:176:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6352:6:11",
														"nodeType": "YulTypedName",
														"src": "6352:6:11",
														"type": ""
													}
												],
												"src": "6254:176:11"
											},
											{
												"body": {
													"nativeSrc": "6582:220:11",
													"nodeType": "YulBlock",
													"src": "6582:220:11",
													"statements": [
														{
															"nativeSrc": "6592:74:11",
															"nodeType": "YulAssignment",
															"src": "6592:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6658:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6658:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6663:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6663:2:11",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6599:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "6599:58:11"
																},
																"nativeSrc": "6599:67:11",
																"nodeType": "YulFunctionCall",
																"src": "6599:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "6592:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6592:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6764:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6764:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694",
																	"nativeSrc": "6675:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "6675:88:11"
																},
																"nativeSrc": "6675:93:11",
																"nodeType": "YulFunctionCall",
																"src": "6675:93:11"
															},
															"nativeSrc": "6675:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "6675:93:11"
														},
														{
															"nativeSrc": "6777:19:11",
															"nodeType": "YulAssignment",
															"src": "6777:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6788:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "6788:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6793:2:11",
																		"nodeType": "YulLiteral",
																		"src": "6793:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6784:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6784:3:11"
																},
																"nativeSrc": "6784:12:11",
																"nodeType": "YulFunctionCall",
																"src": "6784:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6777:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6777:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6436:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6570:3:11",
														"nodeType": "YulTypedName",
														"src": "6570:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6578:3:11",
														"nodeType": "YulTypedName",
														"src": "6578:3:11",
														"type": ""
													}
												],
												"src": "6436:366:11"
											},
											{
												"body": {
													"nativeSrc": "6979:248:11",
													"nodeType": "YulBlock",
													"src": "6979:248:11",
													"statements": [
														{
															"nativeSrc": "6989:26:11",
															"nodeType": "YulAssignment",
															"src": "6989:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7001:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7001:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7012:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7012:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6997:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6997:3:11"
																},
																"nativeSrc": "6997:18:11",
																"nodeType": "YulFunctionCall",
																"src": "6997:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6989:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6989:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7036:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7036:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7047:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7047:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7032:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7032:3:11"
																		},
																		"nativeSrc": "7032:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7032:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7055:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7055:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7061:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7061:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7051:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7051:3:11"
																		},
																		"nativeSrc": "7051:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7051:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7025:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7025:6:11"
																},
																"nativeSrc": "7025:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7025:47:11"
															},
															"nativeSrc": "7025:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7025:47:11"
														},
														{
															"nativeSrc": "7081:139:11",
															"nodeType": "YulAssignment",
															"src": "7081:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7215:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7215:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7089:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7089:124:11"
																},
																"nativeSrc": "7089:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7089:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7081:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7081:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6808:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6959:9:11",
														"nodeType": "YulTypedName",
														"src": "6959:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6974:4:11",
														"nodeType": "YulTypedName",
														"src": "6974:4:11",
														"type": ""
													}
												],
												"src": "6808:419:11"
											},
											{
												"body": {
													"nativeSrc": "7261:152:11",
													"nodeType": "YulBlock",
													"src": "7261:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7278:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7278:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7281:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7281:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7271:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7271:6:11"
																},
																"nativeSrc": "7271:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7271:88:11"
															},
															"nativeSrc": "7271:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7271:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7375:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7375:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7378:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7378:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7368:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7368:6:11"
																},
																"nativeSrc": "7368:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7368:15:11"
															},
															"nativeSrc": "7368:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7368:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7399:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7399:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7402:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7402:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7392:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7392:6:11"
																},
																"nativeSrc": "7392:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7392:15:11"
															},
															"nativeSrc": "7392:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7392:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7233:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7233:180:11"
											},
											{
												"body": {
													"nativeSrc": "7447:152:11",
													"nodeType": "YulBlock",
													"src": "7447:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7464:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7464:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7467:77:11",
																		"nodeType": "YulLiteral",
																		"src": "7467:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7457:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7457:6:11"
																},
																"nativeSrc": "7457:88:11",
																"nodeType": "YulFunctionCall",
																"src": "7457:88:11"
															},
															"nativeSrc": "7457:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "7457:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7561:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7561:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7564:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7564:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7554:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7554:6:11"
																},
																"nativeSrc": "7554:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7554:15:11"
															},
															"nativeSrc": "7554:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7554:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7585:1:11",
																		"nodeType": "YulLiteral",
																		"src": "7585:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7588:4:11",
																		"nodeType": "YulLiteral",
																		"src": "7588:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7578:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7578:6:11"
																},
																"nativeSrc": "7578:15:11",
																"nodeType": "YulFunctionCall",
																"src": "7578:15:11"
															},
															"nativeSrc": "7578:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "7578:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7419:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "7419:180:11"
											},
											{
												"body": {
													"nativeSrc": "7647:143:11",
													"nodeType": "YulBlock",
													"src": "7647:143:11",
													"statements": [
														{
															"nativeSrc": "7657:25:11",
															"nodeType": "YulAssignment",
															"src": "7657:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7680:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7680:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7662:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7662:17:11"
																},
																"nativeSrc": "7662:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7662:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7657:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7657:1:11"
																}
															]
														},
														{
															"nativeSrc": "7691:25:11",
															"nodeType": "YulAssignment",
															"src": "7691:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7714:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7714:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7696:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "7696:17:11"
																},
																"nativeSrc": "7696:20:11",
																"nodeType": "YulFunctionCall",
																"src": "7696:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7691:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7691:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7738:22:11",
																"nodeType": "YulBlock",
																"src": "7738:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7740:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "7740:16:11"
																			},
																			"nativeSrc": "7740:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "7740:18:11"
																		},
																		"nativeSrc": "7740:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "7740:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7735:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7735:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7728:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7728:6:11"
																},
																"nativeSrc": "7728:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7728:9:11"
															},
															"nativeSrc": "7725:35:11",
															"nodeType": "YulIf",
															"src": "7725:35:11"
														},
														{
															"nativeSrc": "7770:14:11",
															"nodeType": "YulAssignment",
															"src": "7770:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7779:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7779:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7782:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "7782:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7775:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7775:3:11"
																},
																"nativeSrc": "7775:9:11",
																"nodeType": "YulFunctionCall",
																"src": "7775:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7770:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "7770:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7605:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7636:1:11",
														"nodeType": "YulTypedName",
														"src": "7636:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7639:1:11",
														"nodeType": "YulTypedName",
														"src": "7639:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7645:1:11",
														"nodeType": "YulTypedName",
														"src": "7645:1:11",
														"type": ""
													}
												],
												"src": "7605:185:11"
											},
											{
												"body": {
													"nativeSrc": "7902:69:11",
													"nodeType": "YulBlock",
													"src": "7902:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7924:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7924:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7932:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7932:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7920:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7920:3:11"
																		},
																		"nativeSrc": "7920:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7920:14:11"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420555344542062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "7936:27:11",
																		"nodeType": "YulLiteral",
																		"src": "7936:27:11",
																		"type": "",
																		"value": "Insufficient USDT balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7913:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7913:6:11"
																},
																"nativeSrc": "7913:51:11",
																"nodeType": "YulFunctionCall",
																"src": "7913:51:11"
															},
															"nativeSrc": "7913:51:11",
															"nodeType": "YulExpressionStatement",
															"src": "7913:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83",
												"nativeSrc": "7796:175:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7894:6:11",
														"nodeType": "YulTypedName",
														"src": "7894:6:11",
														"type": ""
													}
												],
												"src": "7796:175:11"
											},
											{
												"body": {
													"nativeSrc": "8123:220:11",
													"nodeType": "YulBlock",
													"src": "8123:220:11",
													"statements": [
														{
															"nativeSrc": "8133:74:11",
															"nodeType": "YulAssignment",
															"src": "8133:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8199:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8199:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8204:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8204:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8140:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8140:58:11"
																},
																"nativeSrc": "8140:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8140:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8133:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8133:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8305:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8305:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83",
																	"nativeSrc": "8216:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8216:88:11"
																},
																"nativeSrc": "8216:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8216:93:11"
															},
															"nativeSrc": "8216:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8216:93:11"
														},
														{
															"nativeSrc": "8318:19:11",
															"nodeType": "YulAssignment",
															"src": "8318:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8329:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8329:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8334:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8334:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8325:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8325:3:11"
																},
																"nativeSrc": "8325:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8325:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8318:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8318:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7977:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8111:3:11",
														"nodeType": "YulTypedName",
														"src": "8111:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8119:3:11",
														"nodeType": "YulTypedName",
														"src": "8119:3:11",
														"type": ""
													}
												],
												"src": "7977:366:11"
											},
											{
												"body": {
													"nativeSrc": "8520:248:11",
													"nodeType": "YulBlock",
													"src": "8520:248:11",
													"statements": [
														{
															"nativeSrc": "8530:26:11",
															"nodeType": "YulAssignment",
															"src": "8530:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8542:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8542:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8553:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8553:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8538:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8538:3:11"
																},
																"nativeSrc": "8538:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8538:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8530:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8530:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8577:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8577:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8588:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8588:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8573:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8573:3:11"
																		},
																		"nativeSrc": "8573:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8573:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8596:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8596:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8602:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8602:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8592:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8592:3:11"
																		},
																		"nativeSrc": "8592:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8592:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8566:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8566:6:11"
																},
																"nativeSrc": "8566:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8566:47:11"
															},
															"nativeSrc": "8566:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8566:47:11"
														},
														{
															"nativeSrc": "8622:139:11",
															"nodeType": "YulAssignment",
															"src": "8622:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8756:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8756:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8630:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8630:124:11"
																},
																"nativeSrc": "8630:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8630:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8622:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8622:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8349:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8500:9:11",
														"nodeType": "YulTypedName",
														"src": "8500:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8515:4:11",
														"nodeType": "YulTypedName",
														"src": "8515:4:11",
														"type": ""
													}
												],
												"src": "8349:419:11"
											},
											{
												"body": {
													"nativeSrc": "8818:147:11",
													"nodeType": "YulBlock",
													"src": "8818:147:11",
													"statements": [
														{
															"nativeSrc": "8828:25:11",
															"nodeType": "YulAssignment",
															"src": "8828:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8851:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8851:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8833:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8833:17:11"
																},
																"nativeSrc": "8833:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8833:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8828:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8828:1:11"
																}
															]
														},
														{
															"nativeSrc": "8862:25:11",
															"nodeType": "YulAssignment",
															"src": "8862:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8885:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8885:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8867:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8867:17:11"
																},
																"nativeSrc": "8867:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8867:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8862:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8862:1:11"
																}
															]
														},
														{
															"nativeSrc": "8896:16:11",
															"nodeType": "YulAssignment",
															"src": "8896:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8907:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8907:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8910:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8910:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8903:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8903:3:11"
																},
																"nativeSrc": "8903:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8903:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8896:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8896:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8936:22:11",
																"nodeType": "YulBlock",
																"src": "8936:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8938:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8938:16:11"
																			},
																			"nativeSrc": "8938:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8938:18:11"
																		},
																		"nativeSrc": "8938:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8938:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8928:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8928:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8931:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8931:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8925:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8925:2:11"
																},
																"nativeSrc": "8925:10:11",
																"nodeType": "YulFunctionCall",
																"src": "8925:10:11"
															},
															"nativeSrc": "8922:36:11",
															"nodeType": "YulIf",
															"src": "8922:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8774:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8805:1:11",
														"nodeType": "YulTypedName",
														"src": "8805:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8808:1:11",
														"nodeType": "YulTypedName",
														"src": "8808:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8814:3:11",
														"nodeType": "YulTypedName",
														"src": "8814:3:11",
														"type": ""
													}
												],
												"src": "8774:191:11"
											},
											{
												"body": {
													"nativeSrc": "9125:288:11",
													"nodeType": "YulBlock",
													"src": "9125:288:11",
													"statements": [
														{
															"nativeSrc": "9135:26:11",
															"nodeType": "YulAssignment",
															"src": "9135:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9147:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9147:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9158:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9158:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9143:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9143:3:11"
																},
																"nativeSrc": "9143:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9143:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9135:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9135:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9215:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9215:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9228:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9228:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9239:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9239:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9224:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9224:3:11"
																		},
																		"nativeSrc": "9224:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9224:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9171:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9171:43:11"
																},
																"nativeSrc": "9171:71:11",
																"nodeType": "YulFunctionCall",
																"src": "9171:71:11"
															},
															"nativeSrc": "9171:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "9171:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9296:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9296:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9309:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9309:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9320:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9320:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9305:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9305:3:11"
																		},
																		"nativeSrc": "9305:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9305:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9252:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9252:43:11"
																},
																"nativeSrc": "9252:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9252:72:11"
															},
															"nativeSrc": "9252:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9252:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9378:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "9378:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9391:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9391:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9402:2:11",
																				"nodeType": "YulLiteral",
																				"src": "9402:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9387:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9387:3:11"
																		},
																		"nativeSrc": "9387:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9387:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9334:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "9334:43:11"
																},
																"nativeSrc": "9334:72:11",
																"nodeType": "YulFunctionCall",
																"src": "9334:72:11"
															},
															"nativeSrc": "9334:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "9334:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8971:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9081:9:11",
														"nodeType": "YulTypedName",
														"src": "9081:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9093:6:11",
														"nodeType": "YulTypedName",
														"src": "9093:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9101:6:11",
														"nodeType": "YulTypedName",
														"src": "9101:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9109:6:11",
														"nodeType": "YulTypedName",
														"src": "9109:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9120:4:11",
														"nodeType": "YulTypedName",
														"src": "9120:4:11",
														"type": ""
													}
												],
												"src": "8971:442:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not the contract owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169(memPtr) {\n\n        mstore(add(memPtr, 0), \"No USDT left to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694(memPtr) {\n\n        mstore(add(memPtr, 0), \"No tokens left to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient USDT balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610610058575f3560e01c806312065fe014610063578063164500921461008d57806359db80f8146100b75780638afbf669146100df5780638da5cb5b146100f5578063bcd2f64a1461011f5761005f565b3661005f57005b5f80fd5b34801561006e575f80fd5b50610077610147565b6040516100849190610899565b60405180910390f35b348015610098575f80fd5b506100a161018b565b6040516100ae9190610899565b60405180910390f35b3480156100c2575f80fd5b506100dd60048036038101906100d89190610910565b610190565b005b3480156100ea575f80fd5b506100f361039e565b005b348015610100575f80fd5b506101096105cc565b604051610116919061094a565b60405180910390f35b34801561012a575f80fd5b506101456004803603810190610140919061098d565b6105f1565b005b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905090565b5f5481565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461021f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021690610a12565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161027a919061094a565b602060405180830381865afa158015610295573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906102b99190610a44565b90505f81116102fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f490610ab9565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83836040518363ffffffff1660e01b8152600401610359929190610ad7565b6020604051808303815f875af1158015610375573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103999190610b33565b505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042490610a12565b60405180910390fd5b5f60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610488919061094a565b602060405180830381865afa1580156104a3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104c79190610a44565b90505f811161050b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050290610ba8565b60405180910390fd5b60035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610588929190610ad7565b6020604051808303815f875af11580156105a4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105c89190610b33565b5050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f6001826105ff9190610c20565b90508060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b815260040161065c919061094a565b602060405180830381865afa158015610677573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061069b9190610a44565b10156106dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d390610c9a565b60405180910390fd5b805f546106e99190610cb8565b5f8190555060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161074c93929190610ceb565b6020604051808303815f875af1158015610768573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061078c9190610b33565b5060035f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016107e9929190610ad7565b6020604051808303815f875af1158015610805573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108299190610b33565b508060045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108769190610cb8565b925050819055505050565b5f819050919050565b61089381610881565b82525050565b5f6020820190506108ac5f83018461088a565b92915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108df826108b6565b9050919050565b6108ef816108d5565b81146108f9575f80fd5b50565b5f8135905061090a816108e6565b92915050565b5f60208284031215610925576109246108b2565b5b5f610932848285016108fc565b91505092915050565b610944816108d5565b82525050565b5f60208201905061095d5f83018461093b565b92915050565b61096c81610881565b8114610976575f80fd5b50565b5f8135905061098781610963565b92915050565b5f602082840312156109a2576109a16108b2565b5b5f6109af84828501610979565b91505092915050565b5f82825260208201905092915050565b7f4e6f742074686520636f6e7472616374206f776e6572000000000000000000005f82015250565b5f6109fc6016836109b8565b9150610a07826109c8565b602082019050919050565b5f6020820190508181035f830152610a29816109f0565b9050919050565b5f81519050610a3e81610963565b92915050565b5f60208284031215610a5957610a586108b2565b5b5f610a6684828501610a30565b91505092915050565b7f4e6f2055534454206c65667420746f20776974686472617700000000000000005f82015250565b5f610aa36018836109b8565b9150610aae82610a6f565b602082019050919050565b5f6020820190508181035f830152610ad081610a97565b9050919050565b5f604082019050610aea5f83018561093b565b610af7602083018461088a565b9392505050565b5f8115159050919050565b610b1281610afe565b8114610b1c575f80fd5b50565b5f81519050610b2d81610b09565b92915050565b5f60208284031215610b4857610b476108b2565b5b5f610b5584828501610b1f565b91505092915050565b7f4e6f20746f6b656e73206c65667420746f2077697468647261770000000000005f82015250565b5f610b92601a836109b8565b9150610b9d82610b5e565b602082019050919050565b5f6020820190508181035f830152610bbf81610b86565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610c2a82610881565b9150610c3583610881565b925082610c4557610c44610bc6565b5b828204905092915050565b7f496e73756666696369656e7420555344542062616c616e6365000000000000005f82015250565b5f610c846019836109b8565b9150610c8f82610c50565b602082019050919050565b5f6020820190508181035f830152610cb181610c78565b9050919050565b5f610cc282610881565b9150610ccd83610881565b9250828201905080821115610ce557610ce4610bf3565b5b92915050565b5f606082019050610cfe5f83018661093b565b610d0b602083018561093b565b610d18604083018461088a565b94935050505056fea264697066735822122039b3e50b5a1b05500a429709c40ae19f7114aab694730a5db1615c39d2b94b7964736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x58 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x63 JUMPI DUP1 PUSH4 0x16450092 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x59DB80F8 EQ PUSH2 0xB7 JUMPI DUP1 PUSH4 0x8AFBF669 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xF5 JUMPI DUP1 PUSH4 0xBCD2F64A EQ PUSH2 0x11F JUMPI PUSH2 0x5F JUMP JUMPDEST CALLDATASIZE PUSH2 0x5F JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x77 PUSH2 0x147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x98 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xDD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD8 SWAP2 SWAP1 PUSH2 0x910 JUMP JUMPDEST PUSH2 0x190 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF3 PUSH2 0x39E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x5CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x98D JUMP JUMPDEST PUSH2 0x5F1 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x21F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x216 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x295 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x2FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F4 SWAP1 PUSH2 0xAB9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x359 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x375 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x42D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x424 SWAP1 PUSH2 0xA12 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x50B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x502 SWAP1 PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x588 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5A4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5C8 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0xC20 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65C SWAP2 SWAP1 PUSH2 0x94A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x677 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x69B SWAP2 SWAP1 PUSH2 0xA44 JUMP JUMPDEST LT ISZERO PUSH2 0x6DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D3 SWAP1 PUSH2 0xC9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 SLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x74C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xCEB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x768 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x78C SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E9 SWAP3 SWAP2 SWAP1 PUSH2 0xAD7 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x805 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x829 SWAP2 SWAP1 PUSH2 0xB33 JUMP JUMPDEST POP DUP1 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x876 SWAP2 SWAP1 PUSH2 0xCB8 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x893 DUP2 PUSH2 0x881 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8AC PUSH0 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8DF DUP3 PUSH2 0x8B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8EF DUP2 PUSH2 0x8D5 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x90A DUP2 PUSH2 0x8E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x925 JUMPI PUSH2 0x924 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x932 DUP5 DUP3 DUP6 ADD PUSH2 0x8FC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x944 DUP2 PUSH2 0x8D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95D PUSH0 DUP4 ADD DUP5 PUSH2 0x93B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x96C DUP2 PUSH2 0x881 JUMP JUMPDEST DUP2 EQ PUSH2 0x976 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x987 DUP2 PUSH2 0x963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x9A2 JUMPI PUSH2 0x9A1 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x9AF DUP5 DUP3 DUP6 ADD PUSH2 0x979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F742074686520636F6E7472616374206F776E657200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9FC PUSH1 0x16 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xA07 DUP3 PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xA29 DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA3E DUP2 PUSH2 0x963 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA58 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA66 DUP5 DUP3 DUP6 ADD PUSH2 0xA30 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F2055534454206C65667420746F2077697468647261770000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xAA3 PUSH1 0x18 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xAAE DUP3 PUSH2 0xA6F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xAD0 DUP2 PUSH2 0xA97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xAEA PUSH0 DUP4 ADD DUP6 PUSH2 0x93B JUMP JUMPDEST PUSH2 0xAF7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB12 DUP2 PUSH2 0xAFE JUMP JUMPDEST DUP2 EQ PUSH2 0xB1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xB2D DUP2 PUSH2 0xB09 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB48 JUMPI PUSH2 0xB47 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xB55 DUP5 DUP3 DUP6 ADD PUSH2 0xB1F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F20746F6B656E73206C65667420746F207769746864726177000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB92 PUSH1 0x1A DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xB9D DUP3 PUSH2 0xB5E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBBF DUP2 PUSH2 0xB86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xC2A DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP2 POP PUSH2 0xC35 DUP4 PUSH2 0x881 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xC45 JUMPI PUSH2 0xC44 PUSH2 0xBC6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420555344542062616C616E636500000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xC84 PUSH1 0x19 DUP4 PUSH2 0x9B8 JUMP JUMPDEST SWAP2 POP PUSH2 0xC8F DUP3 PUSH2 0xC50 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xCB1 DUP2 PUSH2 0xC78 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xCC2 DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP2 POP PUSH2 0xCCD DUP4 PUSH2 0x881 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE4 PUSH2 0xBF3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xCFE PUSH0 DUP4 ADD DUP7 PUSH2 0x93B JUMP JUMPDEST PUSH2 0xD0B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x93B JUMP JUMPDEST PUSH2 0xD18 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x88A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xB3 0xE5 SIGNEXTEND GAS SHL SDIV POP EXP TIMESTAMP SWAP8 MULMOD 0xC4 EXP 0xE1 SWAP16 PUSH18 0x14AAB694730A5DB1615C39D2B94B7964736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "463:1442:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1354:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1687:215;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1460:219;;;;;;;;;;;;;:::i;:::-;;520:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;914:432;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1354:98;1397:7;1424:8;:20;1433:10;1424:20;;;;;;;;;;;;;;;;1417:27;;1354:98;:::o;488:23::-;;;;:::o;1687:215::-;801:5;;;;;;;;;;;787:19;;:10;:19;;;779:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1750:15:::1;1768:4;;;;;;;;;;;:14;;;1791:4;1768:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1750:47;;1826:1;1816:7;:11;1808:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1867:4;;;;;;;;;;;:13;;;1881:3;1886:7;1867:27;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1739:163;1687:215:::0;:::o;1460:219::-;801:5;;;;;;;;;;;787:19;;:10;:19;;;779:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1523:15:::1;1541:4;;;;;;;;;;;:14;;;1564:4;1541:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1523:47;;1599:1;1589:7;:11;1581:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1642:4;;;;;;;;;;;:13;;;1656:5;;;;;;;;;;;1663:7;1642:29;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1512:167;1460:219::o:0;520:20::-;;;;;;;;;;;;;:::o;914:432::-;980:19;281:1;1002:11;:33;;;;:::i;:::-;980:55;;1086:11;1056:4;;;;;;;;;;;:14;;;1071:10;1056:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;1048:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1162:11;1151:8;;:22;;;;:::i;:::-;1140:8;:33;;;;1184:4;;;;;;;;;;;:17;;;1202:10;1222:4;1229:11;1184:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1252:4;;;;;;;;;;;:13;;;1266:10;1278:11;1252:38;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1327:11;1303:8;:20;1312:10;1303:20;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;969:377;914:432;:::o;7:77:11:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:122::-;2036:24;2054:5;2036:24;:::i;:::-;2029:5;2026:35;2016:63;;2075:1;2072;2065:12;2016:63;1963:122;:::o;2091:139::-;2137:5;2175:6;2162:20;2153:29;;2191:33;2218:5;2191:33;:::i;:::-;2091:139;;;;:::o;2236:329::-;2295:6;2344:2;2332:9;2323:7;2319:23;2315:32;2312:119;;;2350:79;;:::i;:::-;2312:119;2470:1;2495:53;2540:7;2531:6;2520:9;2516:22;2495:53;:::i;:::-;2485:63;;2441:117;2236:329;;;;:::o;2571:169::-;2655:11;2689:6;2684:3;2677:19;2729:4;2724:3;2720:14;2705:29;;2571:169;;;;:::o;2746:172::-;2886:24;2882:1;2874:6;2870:14;2863:48;2746:172;:::o;2924:366::-;3066:3;3087:67;3151:2;3146:3;3087:67;:::i;:::-;3080:74;;3163:93;3252:3;3163:93;:::i;:::-;3281:2;3276:3;3272:12;3265:19;;2924:366;;;:::o;3296:419::-;3462:4;3500:2;3489:9;3485:18;3477:26;;3549:9;3543:4;3539:20;3535:1;3524:9;3520:17;3513:47;3577:131;3703:4;3577:131;:::i;:::-;3569:139;;3296:419;;;:::o;3721:143::-;3778:5;3809:6;3803:13;3794:22;;3825:33;3852:5;3825:33;:::i;:::-;3721:143;;;;:::o;3870:351::-;3940:6;3989:2;3977:9;3968:7;3964:23;3960:32;3957:119;;;3995:79;;:::i;:::-;3957:119;4115:1;4140:64;4196:7;4187:6;4176:9;4172:22;4140:64;:::i;:::-;4130:74;;4086:128;3870:351;;;;:::o;4227:174::-;4367:26;4363:1;4355:6;4351:14;4344:50;4227:174;:::o;4407:366::-;4549:3;4570:67;4634:2;4629:3;4570:67;:::i;:::-;4563:74;;4646:93;4735:3;4646:93;:::i;:::-;4764:2;4759:3;4755:12;4748:19;;4407:366;;;:::o;4779:419::-;4945:4;4983:2;4972:9;4968:18;4960:26;;5032:9;5026:4;5022:20;5018:1;5007:9;5003:17;4996:47;5060:131;5186:4;5060:131;:::i;:::-;5052:139;;4779:419;;;:::o;5204:332::-;5325:4;5363:2;5352:9;5348:18;5340:26;;5376:71;5444:1;5433:9;5429:17;5420:6;5376:71;:::i;:::-;5457:72;5525:2;5514:9;5510:18;5501:6;5457:72;:::i;:::-;5204:332;;;;;:::o;5542:90::-;5576:7;5619:5;5612:13;5605:21;5594:32;;5542:90;;;:::o;5638:116::-;5708:21;5723:5;5708:21;:::i;:::-;5701:5;5698:32;5688:60;;5744:1;5741;5734:12;5688:60;5638:116;:::o;5760:137::-;5814:5;5845:6;5839:13;5830:22;;5861:30;5885:5;5861:30;:::i;:::-;5760:137;;;;:::o;5903:345::-;5970:6;6019:2;6007:9;5998:7;5994:23;5990:32;5987:119;;;6025:79;;:::i;:::-;5987:119;6145:1;6170:61;6223:7;6214:6;6203:9;6199:22;6170:61;:::i;:::-;6160:71;;6116:125;5903:345;;;;:::o;6254:176::-;6394:28;6390:1;6382:6;6378:14;6371:52;6254:176;:::o;6436:366::-;6578:3;6599:67;6663:2;6658:3;6599:67;:::i;:::-;6592:74;;6675:93;6764:3;6675:93;:::i;:::-;6793:2;6788:3;6784:12;6777:19;;6436:366;;;:::o;6808:419::-;6974:4;7012:2;7001:9;6997:18;6989:26;;7061:9;7055:4;7051:20;7047:1;7036:9;7032:17;7025:47;7089:131;7215:4;7089:131;:::i;:::-;7081:139;;6808:419;;;:::o;7233:180::-;7281:77;7278:1;7271:88;7378:4;7375:1;7368:15;7402:4;7399:1;7392:15;7419:180;7467:77;7464:1;7457:88;7564:4;7561:1;7554:15;7588:4;7585:1;7578:15;7605:185;7645:1;7662:20;7680:1;7662:20;:::i;:::-;7657:25;;7696:20;7714:1;7696:20;:::i;:::-;7691:25;;7735:1;7725:35;;7740:18;;:::i;:::-;7725:35;7782:1;7779;7775:9;7770:14;;7605:185;;;;:::o;7796:175::-;7936:27;7932:1;7924:6;7920:14;7913:51;7796:175;:::o;7977:366::-;8119:3;8140:67;8204:2;8199:3;8140:67;:::i;:::-;8133:74;;8216:93;8305:3;8216:93;:::i;:::-;8334:2;8329:3;8325:12;8318:19;;7977:366;;;:::o;8349:419::-;8515:4;8553:2;8542:9;8538:18;8530:26;;8602:9;8596:4;8592:20;8588:1;8577:9;8573:17;8566:47;8630:131;8756:4;8630:131;:::i;:::-;8622:139;;8349:419;;;:::o;8774:191::-;8814:3;8833:20;8851:1;8833:20;:::i;:::-;8828:25;;8867:20;8885:1;8867:20;:::i;:::-;8862:25;;8910:1;8907;8903:9;8896:16;;8931:3;8928:1;8925:10;8922:36;;;8938:18;;:::i;:::-;8922:36;8774:191;;;;:::o;8971:442::-;9120:4;9158:2;9147:9;9143:18;9135:26;;9171:71;9239:1;9228:9;9224:17;9215:6;9171:71;:::i;:::-;9252:72;9320:2;9309:9;9305:18;9296:6;9252:72;:::i;:::-;9334;9402:2;9391:9;9387:18;9378:6;9334:72;:::i;:::-;8971:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "682800",
								"executionCost": "54258",
								"totalCost": "737058"
							},
							"external": {
								"buyTokenWithUSDT(uint256)": "infinite",
								"getBalance()": "2497",
								"owner()": "2574",
								"totalCap()": "2424",
								"withdrawRemainingTokens()": "infinite",
								"withdrawUSDT(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 463,
									"end": 1905,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 317,
									"end": 359,
									"name": "PUSH",
									"source": 10,
									"value": "55D398326F99059FF775485246999027B3197955"
								},
								{
									"begin": 549,
									"end": 583,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 549,
									"end": 583,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 583,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 549,
									"end": 583,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 549,
									"end": 583,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 549,
									"end": 583,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 549,
									"end": 583,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 394,
									"end": 436,
									"name": "PUSH",
									"source": 10,
									"value": "9C904076C2D96641507B211EE3E499872713DD29"
								},
								{
									"begin": 615,
									"end": 649,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 615,
									"end": 649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 615,
									"end": 649,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 615,
									"end": 649,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 615,
									"end": 649,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 615,
									"end": 649,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 615,
									"end": 649,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 906,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 861,
									"end": 906,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 861,
									"end": 906,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 861,
									"end": 906,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 897,
									"end": 898,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 886,
									"end": 894,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 886,
									"end": 898,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 886,
									"end": 898,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 886,
									"end": 898,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 886,
									"end": 898,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 1905,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122039b3e50b5a1b05500a429709c40ae19f7114aab694730a5db1615c39d2b94b7964736f6c634300081a0033",
									".code": [
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "12065FE0"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "16450092"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "59DB80F8"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "8AFBF669"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "BCD2F64A"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 463,
											"end": 1905,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1354,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 1354,
											"end": 1452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1687,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "tag",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1687,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1460,
											"end": 1679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 520,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 520,
											"end": 540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 914,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 914,
											"end": 1346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1397,
											"end": 1404,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1432,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1424,
											"end": 1444,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1452,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 511,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 488,
											"end": 511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 787,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 787,
											"end": 797,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 787,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 787,
											"end": 806,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 779,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1765,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1768,
											"end": 1772,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1768,
											"end": 1782,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1791,
											"end": 1795,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1768,
											"end": 1797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1797,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1768,
											"end": 1797,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1768,
											"end": 1797,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1797,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1797,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1826,
											"end": 1827,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1823,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1827,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1808,
											"end": 1856,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1808,
											"end": 1856,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1880,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1881,
											"end": 1884,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 1893,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1867,
											"end": 1894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1894,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1867,
											"end": 1894,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1867,
											"end": 1894,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1739,
											"end": 1902,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1687,
											"end": 1902,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1460,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 801,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 801,
											"end": 806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 787,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 787,
											"end": 797,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 787,
											"end": 806,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 787,
											"end": 806,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 787,
											"end": 806,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 779,
											"end": 833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 779,
											"end": 833,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 779,
											"end": 833,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1538,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1555,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1555,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1564,
											"end": 1568,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1541,
											"end": 1570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1541,
											"end": 1570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1541,
											"end": 1570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1570,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1523,
											"end": 1570,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1599,
											"end": 1600,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1589,
											"end": 1596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1600,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1581,
											"end": 1631,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 1581,
											"end": 1631,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1646,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1655,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1656,
											"end": 1661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1663,
											"end": 1670,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1642,
											"end": 1671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1671,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1671,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1642,
											"end": 1671,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1512,
											"end": 1679,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1460,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 520,
											"end": 540,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 520,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 980,
											"end": 999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 282,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1002,
											"end": 1013,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1002,
											"end": 1035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1002,
											"end": 1035,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 980,
											"end": 1035,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 980,
											"end": 1035,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1086,
											"end": 1097,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1060,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1070,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1070,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1070,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 1071,
											"end": 1081,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 1056,
											"end": 1082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1056,
											"end": 1082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1097,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1056,
											"end": 1097,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1048,
											"end": 1127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1048,
											"end": 1127,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1162,
											"end": 1173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1159,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1151,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1151,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1148,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1188,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1201,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 1202,
											"end": 1212,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1222,
											"end": 1226,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 1229,
											"end": 1240,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1184,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1184,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1184,
											"end": 1241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1252,
											"end": 1256,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1265,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 1266,
											"end": 1276,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1278,
											"end": 1289,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1252,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 1252,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1327,
											"end": 1338,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1311,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1322,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1323,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1303,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1303,
											"end": 1338,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 969,
											"end": 1346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 914,
											"end": 1346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 523,
											"end": 640,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 523,
											"end": 640,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 632,
											"end": 633,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 630,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 622,
											"end": 634,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 769,
											"end": 895,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 806,
											"end": 813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 888,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 835,
											"end": 889,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 824,
											"end": 889,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 824,
											"end": 889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 769,
											"end": 895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 901,
											"end": 997,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 938,
											"end": 945,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 985,
											"end": 990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 967,
											"end": 991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 967,
											"end": 991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 967,
											"end": 991,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 967,
											"end": 991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 956,
											"end": 991,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 956,
											"end": 991,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 901,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2029,
											"end": 2034,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2026,
											"end": 2061,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2072,
											"end": 2073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2065,
											"end": 2077,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 2016,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 2085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2137,
											"end": 2142,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2175,
											"end": 2181,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2182,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2153,
											"end": 2182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2218,
											"end": 2223,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 2191,
											"end": 2224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 2191,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2344,
											"end": 2346,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2332,
											"end": 2341,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2342,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2315,
											"end": 2347,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 2350,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 2350,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 2312,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2470,
											"end": 2471,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2540,
											"end": 2547,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2531,
											"end": 2537,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2520,
											"end": 2529,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2516,
											"end": 2538,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 2495,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2495,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2485,
											"end": 2548,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2441,
											"end": 2558,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2236,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2684,
											"end": 2687,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2696,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2727,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2720,
											"end": 2734,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2734,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2571,
											"end": 2740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2918,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 2746,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2886,
											"end": 2910,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F742074686520636F6E7472616374206F776E657200000000000000000000"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2874,
											"end": 2880,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2863,
											"end": 2911,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2746,
											"end": 2918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3066,
											"end": 3069,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3151,
											"end": 3153,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 3146,
											"end": 3149,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3087,
											"end": 3154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 3087,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3154,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3080,
											"end": 3154,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3252,
											"end": 3255,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3163,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 3163,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3281,
											"end": 3283,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3276,
											"end": 3279,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3265,
											"end": 3284,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 3290,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2924,
											"end": 3290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3462,
											"end": 3466,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3489,
											"end": 3498,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3485,
											"end": 3503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3477,
											"end": 3503,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3549,
											"end": 3558,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3539,
											"end": 3559,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3533,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3520,
											"end": 3537,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3513,
											"end": 3560,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3703,
											"end": 3707,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3577,
											"end": 3708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 3577,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3569,
											"end": 3708,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3569,
											"end": 3708,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3715,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3296,
											"end": 3715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3864,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3721,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3783,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3803,
											"end": 3816,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3794,
											"end": 3816,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3794,
											"end": 3816,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3825,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3852,
											"end": 3857,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3825,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3825,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3825,
											"end": 3858,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 3825,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3864,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3864,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3864,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 4221,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3870,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3991,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3977,
											"end": 3986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3968,
											"end": 3975,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3964,
											"end": 3987,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3960,
											"end": 3992,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3995,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 3995,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 3957,
											"end": 4076,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4140,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4196,
											"end": 4203,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4187,
											"end": 4193,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4176,
											"end": 4185,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4172,
											"end": 4194,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 4140,
											"end": 4204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4140,
											"end": 4204,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 4140,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4086,
											"end": 4214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 4221,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 4221,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 4221,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 4221,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3870,
											"end": 4221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4401,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4227,
											"end": 4401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4367,
											"end": 4393,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F2055534454206C65667420746F2077697468647261770000000000000000"
										},
										{
											"begin": 4363,
											"end": 4364,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4351,
											"end": 4365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4344,
											"end": 4394,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4227,
											"end": 4401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4773,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 4407,
											"end": 4773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4549,
											"end": 4552,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4634,
											"end": 4636,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 4629,
											"end": 4632,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4570,
											"end": 4637,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 4570,
											"end": 4637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4570,
											"end": 4637,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 4570,
											"end": 4637,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4637,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4563,
											"end": 4637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4735,
											"end": 4738,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 4646,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4646,
											"end": 4739,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 4646,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4762,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4755,
											"end": 4767,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4748,
											"end": 4767,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4748,
											"end": 4767,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4773,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4407,
											"end": 4773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 5198,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 4779,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4945,
											"end": 4949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 4985,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4968,
											"end": 4986,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 4986,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4960,
											"end": 4986,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5032,
											"end": 5041,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5026,
											"end": 5030,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5022,
											"end": 5042,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5018,
											"end": 5019,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5007,
											"end": 5016,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5020,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4996,
											"end": 5043,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 5186,
											"end": 5190,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 5060,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5060,
											"end": 5191,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 5060,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5191,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5052,
											"end": 5191,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 5198,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 5198,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 5198,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4779,
											"end": 5198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5325,
											"end": 5329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5363,
											"end": 5365,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5348,
											"end": 5366,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5366,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5340,
											"end": 5366,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5444,
											"end": 5445,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5446,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5420,
											"end": 5426,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 5376,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 5376,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5457,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5457,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 5457,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5457,
											"end": 5529,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 5457,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5632,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5542,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5576,
											"end": 5583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5619,
											"end": 5624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5612,
											"end": 5625,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5605,
											"end": 5626,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5632,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5542,
											"end": 5632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5754,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 5638,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5723,
											"end": 5728,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 5708,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5708,
											"end": 5729,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 5708,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5701,
											"end": 5706,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5698,
											"end": 5730,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5688,
											"end": 5748,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5744,
											"end": 5745,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5734,
											"end": 5746,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5688,
											"end": 5748,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5688,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5754,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5638,
											"end": 5754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5897,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 5760,
											"end": 5897,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5814,
											"end": 5819,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5845,
											"end": 5851,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5839,
											"end": 5852,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5830,
											"end": 5852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5830,
											"end": 5852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 5885,
											"end": 5890,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 5861,
											"end": 5891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5861,
											"end": 5891,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 5861,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5897,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5897,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5897,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5760,
											"end": 5897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6248,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 5903,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5970,
											"end": 5976,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6021,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6007,
											"end": 6016,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5998,
											"end": 6005,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6017,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5990,
											"end": 6022,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 6106,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5987,
											"end": 6106,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6025,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 6025,
											"end": 6104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 6025,
											"end": 6104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6025,
											"end": 6104,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 6025,
											"end": 6104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5987,
											"end": 6106,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5987,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6170,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 6223,
											"end": 6230,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6203,
											"end": 6212,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6199,
											"end": 6221,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 6170,
											"end": 6231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6170,
											"end": 6231,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 6170,
											"end": 6231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6160,
											"end": 6231,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6116,
											"end": 6241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6248,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6248,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5903,
											"end": 6248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6430,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 6254,
											"end": 6430,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6394,
											"end": 6422,
											"name": "PUSH",
											"source": 11,
											"value": "4E6F20746F6B656E73206C65667420746F207769746864726177000000000000"
										},
										{
											"begin": 6390,
											"end": 6391,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6382,
											"end": 6388,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6378,
											"end": 6392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6371,
											"end": 6423,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6254,
											"end": 6430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6436,
											"end": 6802,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 6436,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6578,
											"end": 6581,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6599,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6663,
											"end": 6665,
											"name": "PUSH",
											"source": 11,
											"value": "1A"
										},
										{
											"begin": 6658,
											"end": 6661,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6599,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 6599,
											"end": 6666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6599,
											"end": 6666,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6599,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6592,
											"end": 6666,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6592,
											"end": 6666,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6675,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 6764,
											"end": 6767,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6675,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 6675,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6675,
											"end": 6768,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 6675,
											"end": 6768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6793,
											"end": 6795,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6788,
											"end": 6791,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6784,
											"end": 6796,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6777,
											"end": 6796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6777,
											"end": 6796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6436,
											"end": 6802,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6436,
											"end": 6802,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6436,
											"end": 6802,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6436,
											"end": 6802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 7227,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 6808,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6974,
											"end": 6978,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7012,
											"end": 7014,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7001,
											"end": 7010,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6997,
											"end": 7015,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6989,
											"end": 7015,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6989,
											"end": 7015,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7061,
											"end": 7070,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7055,
											"end": 7059,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7051,
											"end": 7071,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7047,
											"end": 7048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7036,
											"end": 7045,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7032,
											"end": 7049,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7025,
											"end": 7072,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7089,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 7215,
											"end": 7219,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7089,
											"end": 7220,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 7089,
											"end": 7220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7089,
											"end": 7220,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 7089,
											"end": 7220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7081,
											"end": 7220,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7081,
											"end": 7220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 7227,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 7227,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 7227,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6808,
											"end": 7227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7233,
											"end": 7413,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 7233,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7281,
											"end": 7358,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7271,
											"end": 7359,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7382,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 7375,
											"end": 7376,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7368,
											"end": 7383,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7402,
											"end": 7406,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7399,
											"end": 7400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7407,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7419,
											"end": 7599,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 7419,
											"end": 7599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7467,
											"end": 7544,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7464,
											"end": 7465,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7545,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7564,
											"end": 7568,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 7561,
											"end": 7562,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7554,
											"end": 7569,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7588,
											"end": 7592,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7585,
											"end": 7586,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7578,
											"end": 7593,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7790,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 7605,
											"end": 7790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7645,
											"end": 7646,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 7680,
											"end": 7681,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7662,
											"end": 7682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 7662,
											"end": 7682,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7657,
											"end": 7682,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7657,
											"end": 7682,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 7696,
											"end": 7716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 7696,
											"end": 7716,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7716,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7691,
											"end": 7716,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7760,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 7725,
											"end": 7760,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 7740,
											"end": 7758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 7740,
											"end": 7758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7725,
											"end": 7760,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 7725,
											"end": 7760,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7782,
											"end": 7783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7779,
											"end": 7780,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7775,
											"end": 7784,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7784,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7770,
											"end": 7784,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7790,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7790,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7605,
											"end": 7790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7796,
											"end": 7971,
											"name": "tag",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 7796,
											"end": 7971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7936,
											"end": 7963,
											"name": "PUSH",
											"source": 11,
											"value": "496E73756666696369656E7420555344542062616C616E636500000000000000"
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7924,
											"end": 7930,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7920,
											"end": 7934,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7913,
											"end": 7964,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7796,
											"end": 7971,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7796,
											"end": 7971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 8343,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 7977,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8119,
											"end": 8122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 8204,
											"end": 8206,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 8199,
											"end": 8202,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 8140,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8140,
											"end": 8207,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 8140,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8207,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8133,
											"end": 8207,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8305,
											"end": 8308,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "120"
										},
										{
											"begin": 8216,
											"end": 8309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8216,
											"end": 8309,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 8216,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8334,
											"end": 8336,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8329,
											"end": 8332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8325,
											"end": 8337,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8318,
											"end": 8337,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8318,
											"end": 8337,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 8343,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 8343,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 8343,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7977,
											"end": 8343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8768,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 8349,
											"end": 8768,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8515,
											"end": 8519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8553,
											"end": 8555,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8542,
											"end": 8551,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8538,
											"end": 8556,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8530,
											"end": 8556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8530,
											"end": 8556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8596,
											"end": 8600,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8592,
											"end": 8612,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8588,
											"end": 8589,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8577,
											"end": 8586,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8573,
											"end": 8590,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8566,
											"end": 8613,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 8756,
											"end": 8760,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 8630,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8630,
											"end": 8761,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 8630,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8622,
											"end": 8761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8622,
											"end": 8761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8768,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8768,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8768,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8965,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 8774,
											"end": 8965,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8814,
											"end": 8817,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 8851,
											"end": 8852,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 8833,
											"end": 8853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 8833,
											"end": 8853,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8828,
											"end": 8853,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8867,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 8885,
											"end": 8886,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8867,
											"end": 8887,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 8867,
											"end": 8887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8867,
											"end": 8887,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 8867,
											"end": 8887,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8862,
											"end": 8887,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8862,
											"end": 8887,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8910,
											"end": 8911,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8907,
											"end": 8908,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8903,
											"end": 8912,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8896,
											"end": 8912,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8896,
											"end": 8912,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8931,
											"end": 8934,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8928,
											"end": 8929,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8925,
											"end": 8935,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8922,
											"end": 8958,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8922,
											"end": 8958,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 8922,
											"end": 8958,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8938,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 8938,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 8938,
											"end": 8956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8938,
											"end": 8956,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 8938,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8922,
											"end": 8958,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 8922,
											"end": 8958,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8965,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8965,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8965,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8774,
											"end": 8965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9120,
											"end": 9124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9158,
											"end": 9160,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9147,
											"end": 9156,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9143,
											"end": 9161,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9135,
											"end": 9161,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 9239,
											"end": 9240,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9237,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9224,
											"end": 9241,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9215,
											"end": 9221,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 9171,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 9171,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9252,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 9320,
											"end": 9322,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9309,
											"end": 9318,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9305,
											"end": 9323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9252,
											"end": 9324,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 9252,
											"end": 9324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9252,
											"end": 9324,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 9252,
											"end": 9324,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9334,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 9402,
											"end": 9404,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9391,
											"end": 9400,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9378,
											"end": 9384,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9334,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 9334,
											"end": 9406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9334,
											"end": 9406,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 9334,
											"end": 9406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8971,
											"end": 9413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/Tokensale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokenWithUSDT(uint256)": "bcd2f64a",
							"getBalance()": "12065fe0",
							"owner()": "8da5cb5b",
							"totalCap()": "16450092",
							"withdrawRemainingTokens()": "8afbf669",
							"withdrawUSDT(address)": "59db80f8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_usdtAmount\",\"type\":\"uint256\"}],\"name\":\"buyTokenWithUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRemainingTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tokensale.sol\":\"Valtsale\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xca2ae13e0610f6a99238dd00b97bd786bc92732dae6d6b9d61f573ec51018310\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75f8c71ce0c91c40dd5f249ace0b7d8270f8f1767231bcf71490f7157d6ba862\",\"dweb:/ipfs/QmYXgxeDyFHvz3JsXxLEYN6GNUR44ThHeFj5XkpkgMoG4w\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/Tokensale.sol\":{\"keccak256\":\"0x666fdc925ee073c4ef7f5bb6a2e8f26fe4633059a138560cc34e8c697b230731\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bf6a0e1ef6bf1d6d2fae7be0193b60567410f6503f6516cc062cc6404aaf192\",\"dweb:/ipfs/Qmeq9oNcz5L3XjuP1SJM9Kd3Fnh425Dh8yJgqesWKaVhfJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1065,
								"contract": "contracts/Tokensale.sol:Valtsale",
								"label": "totalCap",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1067,
								"contract": "contracts/Tokensale.sol:Valtsale",
								"label": "owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1073,
								"contract": "contracts/Tokensale.sol:Valtsale",
								"label": "usdt",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 1079,
								"contract": "contracts/Tokensale.sol:Valtsale",
								"label": "valt",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)315"
							},
							{
								"astId": 1083,
								"contract": "contracts/Tokensale.sol:Valtsale",
								"label": "balances",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)315": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1015
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1016,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1015,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1015,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1015
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							1049
						],
						"IERC20": [
							315
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1049,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								1049,
								315
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1049
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 1050,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1049,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 316,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							315
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 249,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 258,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 315,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 315,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 315,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 315,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 315,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 315,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								249,
								258
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"SafeERC20": [
							726
						]
					},
					"id": 727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 316,
							"src": "141:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "149:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 321,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 230,
							"src": "179:58:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 320,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 727,
							"sourceUnit": 986,
							"src": "238:51:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 322,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 985,
										"src": "246:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 324,
								"nodeType": "StructuredDocumentation",
								"src": "291:458:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 726,
							"linearizedBaseContracts": [
								726
							],
							"name": "SafeERC20",
							"nameLocation": "758:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 325,
										"nodeType": "StructuredDocumentation",
										"src": "774:65:5",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 329,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "850:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "883:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "875:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:15:5"
									},
									"src": "844:46:5"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "896:71:5",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 338,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "978:32:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1019:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1011:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1036:16:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1028:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1062:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "1054:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1054:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:70:5"
									},
									"src": "972:109:5"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "1343:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "1373:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 353,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 342,
																		"src": "1395:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1401:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 282,
																	"src": "1395:14:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 355,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 344,
																			"src": "1412:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 356,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 346,
																			"src": "1416:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1411:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1380:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1384:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1380:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1380:43:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1353:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1353:71:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "1353:71:5"
											}
										]
									},
									"documentation": {
										"id": 339,
										"nodeType": "StructuredDocumentation",
										"src": "1087:179:5",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1280:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1300:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1293:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 341,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 340,
														"name": "IERC20",
														"nameLocations": [
															"1293:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1293:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1293:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1315:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1307:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1327:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "1319:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1292:41:5"
									},
									"returnParameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1343:0:5"
									},
									"scope": 726,
									"src": "1271:160:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "1760:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 376,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "1790:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 379,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 366,
																		"src": "1812:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1818:12:5",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 314,
																	"src": "1812:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 381,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 368,
																			"src": "1833:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 382,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 370,
																			"src": "1839:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 383,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 372,
																			"src": "1843:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 384,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1832:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 377,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1797:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1801:10:5",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1797:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1797:53:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 375,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 684,
														"src": "1770:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1770:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "1770:81:5"
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "1437:228:5",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1679:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1703:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1696:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 365,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 364,
														"name": "IERC20",
														"nameLocations": [
															"1696:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "1696:6:5"
													},
													"referencedDeclaration": 315,
													"src": "1696:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1718:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1710:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1710:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1732:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1724:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1744:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "1736:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1736:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:55:5"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1760:0:5"
									},
									"scope": 726,
									"src": "1670:188:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "2600:139:5",
										"statements": [
											{
												"assignments": [
													401
												],
												"declarations": [
													{
														"constant": false,
														"id": 401,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2618:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "2610:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 400,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2610:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 410,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2657:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$726",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$726",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2649:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2649:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2649:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 408,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "2664:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 402,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2633:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2639:9:5",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 292,
														"src": "2633:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2610:62:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 412,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 393,
															"src": "2695:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 413,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 395,
															"src": "2702:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 414,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2711:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 415,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "2726:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 510,
														"src": "2682:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2682:50:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "2682:50:5"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "1864:645:5",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2523:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2552:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2545:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 392,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 391,
														"name": "IERC20",
														"nameLocations": [
															"2545:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "2545:6:5"
													},
													"referencedDeclaration": 315,
													"src": "2545:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2567:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2559:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2559:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2584:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "2576:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2576:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2544:46:5"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2600:0:5"
									},
									"scope": 726,
									"src": "2514:225:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "3505:370:5",
										"statements": [
											{
												"id": 461,
												"nodeType": "UncheckedBlock",
												"src": "3515:354:5",
												"statements": [
													{
														"assignments": [
															432
														],
														"declarations": [
															{
																"constant": false,
																"id": 432,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "3547:16:5",
																"nodeType": "VariableDeclaration",
																"scope": 461,
																"src": "3539:24:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 431,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3539:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 441,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 437,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3590:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$726",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$726",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 436,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3582:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 435,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3582:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3582:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 439,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3597:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 433,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3566:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3572:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "3566:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3566:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3539:66:5"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 432,
																"src": "3623:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 443,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 428,
																"src": "3642:17:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3623:36:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 452,
														"nodeType": "IfStatement",
														"src": "3619:160:5",
														"trueBody": {
															"id": 451,
															"nodeType": "Block",
															"src": "3661:118:5",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 446,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 426,
																				"src": "3719:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 447,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 432,
																				"src": "3728:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 448,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 428,
																				"src": "3746:17:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 445,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 338,
																			"src": "3686:32:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 449,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3686:78:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 450,
																	"nodeType": "RevertStatement",
																	"src": "3679:85:5"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 454,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 424,
																	"src": "3805:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 455,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 426,
																	"src": "3812:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 456,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 432,
																		"src": "3821:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 457,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 428,
																		"src": "3840:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3821:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$315",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 453,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 510,
																"src": "3792:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3792:66:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 460,
														"nodeType": "ExpressionStatement",
														"src": "3792:66:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "2745:657:5",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "3416:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3445:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3438:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 422,
														"name": "IERC20",
														"nameLocations": [
															"3438:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "3438:6:5"
													},
													"referencedDeclaration": 315,
													"src": "3438:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3460:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3452:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "3477:17:5",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "3469:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3437:58:5"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:5"
									},
									"scope": 726,
									"src": "3407:468:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "4529:303:5",
										"statements": [
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "4552:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 509,
														"src": "4539:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 474,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4539:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 484,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 478,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "4582:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															"id": 479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:7:5",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "4582:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 480,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 469,
																	"src": "4598:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "4607:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 482,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4597:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 476,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "4567:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4571:10:5",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "4567:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4539:75:5"
											},
											{
												"condition": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4629:45:5",
													"subExpression": {
														"arguments": [
															{
																"id": 486,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "4654:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 487,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "4661:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$315",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 485,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "4630:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 488,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4630:44:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 508,
												"nodeType": "IfStatement",
												"src": "4625:201:5",
												"trueBody": {
													"id": 507,
													"nodeType": "Block",
													"src": "4676:150:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 491,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "4710:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 494,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 467,
																					"src": "4732:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$315",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 495,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4738:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 302,
																				"src": "4732:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 496,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 469,
																						"src": "4748:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 497,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4757:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 498,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4747:12:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 492,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4717:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4721:10:5",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "4717:14:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 499,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4717:43:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 490,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4690:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4690:71:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 501,
															"nodeType": "ExpressionStatement",
															"src": "4690:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 503,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "4795:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 504,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "4802:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 502,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "4775:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4775:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 506,
															"nodeType": "ExpressionStatement",
															"src": "4775:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "3881:566:5",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "4461:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4481:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4474:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 466,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 465,
														"name": "IERC20",
														"nameLocations": [
															"4474:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "4474:6:5"
													},
													"referencedDeclaration": 315,
													"src": "4474:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4496:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4488:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 468,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4513:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "4505:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4505:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4473:46:5"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4529:0:5"
									},
									"scope": 726,
									"src": "4452:380:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "5279:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 523,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 516,
																"src": "5293:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5296:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5293:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5301:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5293:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5311:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5293:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "5379:39:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 537,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "5402:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 538,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "5406:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 539,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 520,
																	"src": "5413:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 535,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "5380:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5386:15:5",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "5380:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5380:38:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 550,
													"nodeType": "IfStatement",
													"src": "5375:117:5",
													"trueBody": {
														"id": 549,
														"nodeType": "Block",
														"src": "5420:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 545,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 514,
																					"src": "5474:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 544,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "5466:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 543,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "5466:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 546,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5466:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 542,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "5441:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5441:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 548,
																"nodeType": "RevertStatement",
																"src": "5434:47:5"
															}
														]
													}
												},
												"id": 551,
												"nodeType": "IfStatement",
												"src": "5289:203:5",
												"trueBody": {
													"id": 534,
													"nodeType": "Block",
													"src": "5314:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 529,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "5341:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 530,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 516,
																		"src": "5348:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 531,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "5352:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 528,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "5328:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5328:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 533,
															"nodeType": "ExpressionStatement",
															"src": "5328:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "4838:333:5",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5185:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5217:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5208:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 513,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 512,
														"name": "IERC1363",
														"nameLocations": [
															"5208:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5208:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5208:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5232:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5224:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5224:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5244:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5236:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5264:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "5251:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 519,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5251:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5207:62:5"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5279:0:5"
									},
									"scope": 726,
									"src": "5176:322:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "6017:239:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 568,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 561,
																"src": "6031:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6034:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6031:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6039:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6031:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 571,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6049:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6031:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6127:49:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 583,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 559,
																	"src": "6154:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 584,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "6160:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 585,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 563,
																	"src": "6164:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 586,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 565,
																	"src": "6171:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 557,
																	"src": "6128:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6134:19:5",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6128:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6128:48:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 597,
													"nodeType": "IfStatement",
													"src": "6123:127:5",
													"trueBody": {
														"id": 596,
														"nodeType": "Block",
														"src": "6178:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 592,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 557,
																					"src": "6232:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 591,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6224:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 590,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6224:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6224:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 589,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "6199:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6199:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 595,
																"nodeType": "RevertStatement",
																"src": "6192:47:5"
															}
														]
													}
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6027:223:5",
												"trueBody": {
													"id": 580,
													"nodeType": "Block",
													"src": "6052:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 574,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "6083:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 575,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 559,
																		"src": "6090:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 576,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "6096:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 577,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 563,
																		"src": "6100:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 573,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 389,
																	"src": "6066:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 578,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6066:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 579,
															"nodeType": "ExpressionStatement",
															"src": "6066:40:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 554,
										"nodeType": "StructuredDocumentation",
										"src": "5504:341:5",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "5859:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5904:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5895:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 556,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 555,
														"name": "IERC1363",
														"nameLocations": [
															"5895:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5895:8:5"
													},
													"referencedDeclaration": 229,
													"src": "5895:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5927:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5919:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5919:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5949:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5941:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5941:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5969:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5961:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5961:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5997:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "5984:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5984:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5885:122:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6017:0:5"
									},
									"scope": 726,
									"src": "5850:406:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 642,
										"nodeType": "Block",
										"src": "7023:218:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 613,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 606,
																"src": "7037:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7040:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7037:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7045:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7037:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7055:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7037:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7123:38:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 627,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "7145:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 628,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "7149:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 629,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 610,
																	"src": "7156:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 625,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "7124:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7130:14:5",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7124:20:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7124:37:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 640,
													"nodeType": "IfStatement",
													"src": "7119:116:5",
													"trueBody": {
														"id": 639,
														"nodeType": "Block",
														"src": "7163:72:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 635,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 604,
																					"src": "7217:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7209:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 633,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7209:7:5",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7209:14:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 632,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 329,
																		"src": "7184:24:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7184:40:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 638,
																"nodeType": "RevertStatement",
																"src": "7177:47:5"
															}
														]
													}
												},
												"id": 641,
												"nodeType": "IfStatement",
												"src": "7033:202:5",
												"trueBody": {
													"id": 624,
													"nodeType": "Block",
													"src": "7058:55:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 619,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "7085:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 620,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 606,
																		"src": "7092:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 621,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "7096:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 618,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 510,
																	"src": "7072:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$315_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7072:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 623,
															"nodeType": "ExpressionStatement",
															"src": "7072:30:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 601,
										"nodeType": "StructuredDocumentation",
										"src": "6262:654:5",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "6930:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6961:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6952:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 603,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 602,
														"name": "IERC1363",
														"nameLocations": [
															"6952:8:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6952:8:5"
													},
													"referencedDeclaration": 229,
													"src": "6952:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6976:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6968:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6968:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6988:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6980:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6980:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7008:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "6995:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 609,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6995:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6951:62:5"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:0:5"
									},
									"scope": 726,
									"src": "6921:320:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "7808:650:5",
										"statements": [
											{
												"assignments": [
													653
												],
												"declarations": [
													{
														"constant": false,
														"id": 653,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "7826:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7818:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7818:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 654,
												"nodeType": "VariableDeclarationStatement",
												"src": "7818:18:5"
											},
											{
												"assignments": [
													656
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "7854:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "7846:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 655,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7846:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"nodeType": "VariableDeclarationStatement",
												"src": "7846:19:5"
											},
											{
												"AST": {
													"nativeSrc": "7900:396:5",
													"nodeType": "YulBlock",
													"src": "7900:396:5",
													"statements": [
														{
															"nativeSrc": "7914:75:5",
															"nodeType": "YulVariableDeclaration",
															"src": "7914:75:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "7934:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7934:3:5"
																		},
																		"nativeSrc": "7934:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7934:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "7941:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7941:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7948:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7948:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7955:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7955:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7961:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7961:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7951:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7951:3:5"
																		},
																		"nativeSrc": "7951:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7951:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "7974:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "7974:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7968:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "7968:5:5"
																		},
																		"nativeSrc": "7968:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7968:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7981:1:5",
																		"nodeType": "YulLiteral",
																		"src": "7981:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7984:4:5",
																		"nodeType": "YulLiteral",
																		"src": "7984:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "7929:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "7929:4:5"
																},
																"nativeSrc": "7929:60:5",
																"nodeType": "YulFunctionCall",
																"src": "7929:60:5"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "7918:7:5",
																	"nodeType": "YulTypedName",
																	"src": "7918:7:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8050:157:5",
																"nodeType": "YulBlock",
																"src": "8050:157:5",
																"statements": [
																	{
																		"nativeSrc": "8068:22:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8068:22:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8085:4:5",
																					"nodeType": "YulLiteral",
																					"src": "8085:4:5",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8079:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "8079:5:5"
																			},
																			"nativeSrc": "8079:11:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8079:11:5"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8072:3:5",
																				"nodeType": "YulTypedName",
																				"src": "8072:3:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8122:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8122:3:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8127:1:5",
																					"nodeType": "YulLiteral",
																					"src": "8127:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8130:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8130:14:5"
																					},
																					"nativeSrc": "8130:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8130:16:5"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8107:14:5",
																				"nodeType": "YulIdentifier",
																				"src": "8107:14:5"
																			},
																			"nativeSrc": "8107:40:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8107:40:5"
																		},
																		"nativeSrc": "8107:40:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8107:40:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8171:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8171:3:5"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8176:14:5",
																						"nodeType": "YulIdentifier",
																						"src": "8176:14:5"
																					},
																					"nativeSrc": "8176:16:5",
																					"nodeType": "YulFunctionCall",
																					"src": "8176:16:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8164:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8164:6:5"
																			},
																			"nativeSrc": "8164:29:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8164:29:5"
																		},
																		"nativeSrc": "8164:29:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8164:29:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8041:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "8041:7:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8034:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8034:6:5"
																},
																"nativeSrc": "8034:15:5",
																"nodeType": "YulFunctionCall",
																"src": "8034:15:5"
															},
															"nativeSrc": "8031:176:5",
															"nodeType": "YulIf",
															"src": "8031:176:5"
														},
														{
															"nativeSrc": "8220:30:5",
															"nodeType": "YulAssignment",
															"src": "8220:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8234:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "8234:14:5"
																},
																"nativeSrc": "8234:16:5",
																"nodeType": "YulFunctionCall",
																"src": "8234:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8220:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "8220:10:5"
																}
															]
														},
														{
															"nativeSrc": "8263:23:5",
															"nodeType": "YulAssignment",
															"src": "8263:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8284:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8284:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8278:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "8278:5:5"
																},
																"nativeSrc": "8278:8:5",
																"nodeType": "YulFunctionCall",
																"src": "8278:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8263:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8263:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "7955:4:5",
														"valueSize": 1
													},
													{
														"declaration": 649,
														"isOffset": false,
														"isSlot": false,
														"src": "7974:4:5",
														"valueSize": 1
													},
													{
														"declaration": 653,
														"isOffset": false,
														"isSlot": false,
														"src": "8220:10:5",
														"valueSize": 1
													},
													{
														"declaration": 656,
														"isOffset": false,
														"isSlot": false,
														"src": "8263:11:5",
														"valueSize": 1
													},
													{
														"declaration": 647,
														"isOffset": false,
														"isSlot": false,
														"src": "7941:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 658,
												"nodeType": "InlineAssembly",
												"src": "7875:421:5"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 659,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "8310:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8324:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8310:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 670,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "8362:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8377:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8362:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8310:68:5",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 664,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 647,
																			"src": "8336:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$315",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8328:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 662,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8328:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8328:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8343:4:5",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8328:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8348:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8328:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8328:31:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 682,
												"nodeType": "IfStatement",
												"src": "8306:146:5",
												"trueBody": {
													"id": 681,
													"nodeType": "Block",
													"src": "8380:72:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 677,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "8434:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$315",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8426:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 675,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8426:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8426:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 674,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "8401:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8401:40:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 680,
															"nodeType": "RevertStatement",
															"src": "8394:47:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "7247:486:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "7747:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7774:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7767:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 646,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 645,
														"name": "IERC20",
														"nameLocations": [
															"7767:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7767:6:5"
													},
													"referencedDeclaration": 315,
													"src": "7767:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7794:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "7781:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7781:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7766:33:5"
									},
									"returnParameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7808:0:5"
									},
									"scope": 726,
									"src": "7738:720:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 724,
										"nodeType": "Block",
										"src": "9049:391:5",
										"statements": [
											{
												"assignments": [
													696
												],
												"declarations": [
													{
														"constant": false,
														"id": 696,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9064:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9059:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 695,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9059:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"nodeType": "VariableDeclarationStatement",
												"src": "9059:12:5"
											},
											{
												"assignments": [
													699
												],
												"declarations": [
													{
														"constant": false,
														"id": 699,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9089:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9081:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 698,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9081:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"nodeType": "VariableDeclarationStatement",
												"src": "9081:18:5"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9117:11:5",
														"nodeType": "VariableDeclaration",
														"scope": 724,
														"src": "9109:19:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9109:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 703,
												"nodeType": "VariableDeclarationStatement",
												"src": "9109:19:5"
											},
											{
												"AST": {
													"nativeSrc": "9163:174:5",
													"nodeType": "YulBlock",
													"src": "9163:174:5",
													"statements": [
														{
															"nativeSrc": "9177:71:5",
															"nodeType": "YulAssignment",
															"src": "9177:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9193:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9193:3:5"
																		},
																		"nativeSrc": "9193:5:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9193:5:5"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9200:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "9200:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9207:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9207:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9214:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9214:4:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9220:4:5",
																				"nodeType": "YulLiteral",
																				"src": "9220:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9210:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9210:3:5"
																		},
																		"nativeSrc": "9210:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9210:15:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9233:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9233:4:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9227:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "9227:5:5"
																		},
																		"nativeSrc": "9227:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9227:11:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9240:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9243:4:5",
																		"nodeType": "YulLiteral",
																		"src": "9243:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9188:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9188:4:5"
																},
																"nativeSrc": "9188:60:5",
																"nodeType": "YulFunctionCall",
																"src": "9188:60:5"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9177:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "9177:7:5"
																}
															]
														},
														{
															"nativeSrc": "9261:30:5",
															"nodeType": "YulAssignment",
															"src": "9261:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9275:14:5",
																	"nodeType": "YulIdentifier",
																	"src": "9275:14:5"
																},
																"nativeSrc": "9275:16:5",
																"nodeType": "YulFunctionCall",
																"src": "9275:16:5"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9261:10:5",
																	"nodeType": "YulIdentifier",
																	"src": "9261:10:5"
																}
															]
														},
														{
															"nativeSrc": "9304:23:5",
															"nodeType": "YulAssignment",
															"src": "9304:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9325:1:5",
																		"nodeType": "YulLiteral",
																		"src": "9325:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9319:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "9319:5:5"
																},
																"nativeSrc": "9319:8:5",
																"nodeType": "YulFunctionCall",
																"src": "9319:8:5"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9304:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "9304:11:5"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "9214:4:5",
														"valueSize": 1
													},
													{
														"declaration": 690,
														"isOffset": false,
														"isSlot": false,
														"src": "9233:4:5",
														"valueSize": 1
													},
													{
														"declaration": 699,
														"isOffset": false,
														"isSlot": false,
														"src": "9261:10:5",
														"valueSize": 1
													},
													{
														"declaration": 702,
														"isOffset": false,
														"isSlot": false,
														"src": "9304:11:5",
														"valueSize": 1
													},
													{
														"declaration": 696,
														"isOffset": false,
														"isSlot": false,
														"src": "9177:7:5",
														"valueSize": 1
													},
													{
														"declaration": 688,
														"isOffset": false,
														"isSlot": false,
														"src": "9200:5:5",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 704,
												"nodeType": "InlineAssembly",
												"src": "9138:199:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 705,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "9353:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 706,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 699,
																		"src": "9365:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9379:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9365:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 717,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "9416:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9431:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9416:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9365:67:5",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 716,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 711,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 688,
																						"src": "9391:5:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$315",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 710,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "9383:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 709,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "9383:7:5",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "9383:14:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9398:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "9383:19:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9403:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "9383:26:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9412:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9383:30:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 721,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9364:69:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9353:80:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 694,
												"id": 723,
												"nodeType": "Return",
												"src": "9346:87:5"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "8464:491:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "8969:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9000:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "8993:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$315",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 686,
														"name": "IERC20",
														"nameLocations": [
															"8993:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "8993:6:5"
													},
													"referencedDeclaration": 315,
													"src": "8993:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$315",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9020:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "9007:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 689,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9007:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8992:33:5"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "9043:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9043:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:6:5"
									},
									"scope": 726,
									"src": "8960:480:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 727,
							"src": "750:8692:5",
							"usedErrors": [
								329,
								338
							],
							"usedEvents": []
						}
					],
					"src": "115:9328:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"Errors": [
							1037
						]
					},
					"id": 986,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 728,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 730,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 986,
							"sourceUnit": 1038,
							"src": "127:36:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 729,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1037,
										"src": "135:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 731,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 985,
							"linearizedBaseContracts": [
								985
							],
							"name": "Address",
							"nameLocation": "241:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 732,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:6",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 736,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 736,
												"src": "358:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:6"
									},
									"src": "335:39:6"
								},
								{
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "1361:278:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 746,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																],
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 744,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 748,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 749,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 741,
														"src": "1399:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "1371:125:6",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "1407:89:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 756,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				],
																				"id": 755,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 754,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 759,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 741,
																		"src": "1478:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 751,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "1428:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "1428:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "1421:64:6"
														}
													]
												}
											},
											{
												"assignments": [
													765,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "1507:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 764,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 772,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 766,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "1525:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 768,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 741,
																"src": "1547:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:6"
											},
											{
												"condition": {
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:6",
													"subExpression": {
														"id": 773,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "1573:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 781,
												"nodeType": "IfStatement",
												"src": "1568:65:6",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "1582:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 775,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "1603:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "1603:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 779,
															"nodeType": "RevertStatement",
															"src": "1596:26:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1309:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "1336:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:6"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:6"
									},
									"scope": 985,
									"src": "1290:349:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 799,
										"nodeType": "Block",
										"src": "2573:62:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "2612:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 795,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "2620:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 796,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 793,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "2590:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 792,
												"id": 798,
												"nodeType": "Return",
												"src": "2583:45:6"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 800,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2506:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2522:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 787,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 800,
												"src": "2559:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 790,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:6"
									},
									"scope": 985,
									"src": "2484:151:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 849,
										"nodeType": "Block",
										"src": "3072:294:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 814,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$985",
																		"typeString": "library Address"
																	}
																],
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 812,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:6",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 817,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 807,
														"src": "3110:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 831,
												"nodeType": "IfStatement",
												"src": "3082:123:6",
												"trueBody": {
													"id": 830,
													"nodeType": "Block",
													"src": "3117:88:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 824,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$985",
																						"typeString": "library Address"
																					}
																				],
																				"id": 823,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 822,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:6",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 827,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "3188:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 819,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "3138:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:6",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1025,
																	"src": "3138:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 828,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 829,
															"nodeType": "RevertStatement",
															"src": "3131:63:6"
														}
													]
												}
											},
											{
												"assignments": [
													833,
													835
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "3215:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 832,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 835,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 849,
														"src": "3229:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 834,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [
														{
															"id": 840,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "3282:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 836,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "3256:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 838,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "3275:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 844,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "3331:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "3339:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 846,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "3348:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 843,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3304:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 811,
												"id": 848,
												"nodeType": "Return",
												"src": "3297:62:6"
											}
										]
									},
									"documentation": {
										"id": 801,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "2990:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3006:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 804,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3025:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:6"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "3058:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 809,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:6"
									},
									"scope": 985,
									"src": "2959:407:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 875,
										"nodeType": "Block",
										"src": "3605:154:6",
										"statements": [
											{
												"assignments": [
													861,
													863
												],
												"declarations": [
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "3616:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 860,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 863,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 875,
														"src": "3630:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 862,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 868,
												"initialValue": {
													"arguments": [
														{
															"id": 866,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "3675:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 864,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3657:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 870,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "3724:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "3732:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 872,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "3741:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 869,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "3697:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 859,
												"id": 874,
												"nodeType": "Return",
												"src": "3690:62:6"
											}
										]
									},
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 876,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3533:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3549:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 854,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:6"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "3591:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 857,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:6"
									},
									"scope": 985,
									"src": "3505:254:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "3997:156:6",
										"statements": [
											{
												"assignments": [
													887,
													889
												],
												"declarations": [
													{
														"constant": false,
														"id": 887,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4008:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 886,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 889,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 901,
														"src": "4022:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 888,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 894,
												"initialValue": {
													"arguments": [
														{
															"id": 892,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "4069:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 890,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4049:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 896,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 879,
															"src": "4118:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 897,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "4126:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 898,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "4135:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 895,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "4091:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 885,
												"id": 900,
												"nodeType": "Return",
												"src": "4084:62:6"
											}
										]
									},
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3930:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3946:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 880,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:6"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "3983:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 883,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:6"
									},
									"scope": 985,
									"src": "3900:253:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "4579:424:6",
										"statements": [
											{
												"condition": {
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:6",
													"subExpression": {
														"id": 914,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "4594:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 939,
													"nodeType": "Block",
													"src": "4653:344:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 921,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 909,
																			"src": "4841:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 925,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 905,
																				"src": "4867:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 936,
															"nodeType": "IfStatement",
															"src": "4837:119:6",
															"trueBody": {
																"id": 935,
																"nodeType": "Block",
																"src": "4892:64:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 932,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 905,
																					"src": "4934:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 931,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 736,
																				"src": "4917:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 934,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:6"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 937,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 909,
																"src": "4976:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 913,
															"id": 938,
															"nodeType": "Return",
															"src": "4969:17:6"
														}
													]
												},
												"id": 940,
												"nodeType": "IfStatement",
												"src": "4589:408:6",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "4603:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 917,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "4625:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 916,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "4617:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:6",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4466:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4490:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4512:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:6"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "4565:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 911,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:6"
									},
									"scope": 985,
									"src": "4421:582:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "5307:122:6",
										"statements": [
											{
												"condition": {
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:6",
													"subExpression": {
														"id": 952,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 945,
														"src": "5322:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "5381:42:6",
													"statements": [
														{
															"expression": {
																"id": 959,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "5402:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 951,
															"id": 960,
															"nodeType": "Return",
															"src": "5395:17:6"
														}
													]
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "5317:106:6",
												"trueBody": {
													"id": 958,
													"nodeType": "Block",
													"src": "5331:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 955,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 947,
																		"src": "5353:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 954,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "5345:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 957,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:6",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5231:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5245:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 946,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:6"
									},
									"returnParameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "5293:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 949,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:6"
									},
									"scope": 985,
									"src": "5205:224:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 983,
										"nodeType": "Block",
										"src": "5598:432:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 970,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "5674:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "5973:51:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 976,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "5994:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$1037_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:6",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1028,
																	"src": "5994:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "5987:26:6"
														}
													]
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "5670:354:6",
												"trueBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "5697:270:6",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:6",
																"nodeType": "YulBlock",
																"src": "5824:133:6",
																"statements": [
																	{
																		"nativeSrc": "5842:40:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:6"
																			},
																			"nativeSrc": "5865:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:6"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:6",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:6",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:6",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:6"
																					},
																					"nativeSrc": "5906:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:6"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:6",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:6"
																			},
																			"nativeSrc": "5899:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:6"
																		},
																		"nativeSrc": "5899:44:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:6"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 967,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:6",
																	"valueSize": 1
																},
																{
																	"declaration": 967,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:6",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 974,
															"nodeType": "InlineAssembly",
															"src": "5799:158:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:6",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 984,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "5560:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 966,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:6"
									},
									"returnParameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:6"
									},
									"scope": 985,
									"src": "5543:487:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 986,
							"src": "233:5799:6",
							"usedErrors": [
								736
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1015
						]
					},
					"id": 1016,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 987,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 988,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1015,
							"linearizedBaseContracts": [
								1015
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 996,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 993,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 992,
												"id": 995,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 997,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1015,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1005,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1002,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1001,
												"id": 1004,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1006,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1006,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1015,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1010,
												"id": 1012,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1008,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1015,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1016,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							1037
						]
					},
					"id": 1038,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1017,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1018,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:8",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 1037,
							"linearizedBaseContracts": [
								1037
							],
							"name": "Errors",
							"nameLocation": "419:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:8",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 1025,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "557:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "574:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:8"
									},
									"src": "531:59:8"
								},
								{
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:8",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 1028,
									"name": "FailedCall",
									"nameLocation": "696:10:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:8"
									},
									"src": "690:19:8"
								},
								{
									"documentation": {
										"id": 1029,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:8",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 1031,
									"name": "FailedDeployment",
									"nameLocation": "772:16:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:8"
									},
									"src": "766:25:8"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:8",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 1036,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "884:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:8"
									},
									"src": "860:33:8"
								}
							],
							"scope": 1038,
							"src": "411:484:8",
							"usedErrors": [
								1025,
								1028,
								1031,
								1036
							],
							"usedEvents": []
						}
					],
					"src": "100:796:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1049
						]
					},
					"id": 1050,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1039,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1040,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1049,
							"linearizedBaseContracts": [
								1049
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1048,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1042,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1045,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1049,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1050,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/Tokensale.sol": {
				"ast": {
					"absolutePath": "contracts/Tokensale.sol",
					"exportedSymbols": {
						"Address": [
							985
						],
						"Context": [
							1015
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							315
						],
						"INITIAL_TOKEN_PRICE": [
							1057
						],
						"MAINNET_USDT": [
							1060
						],
						"MAINNET_VALT": [
							1063
						],
						"Ownable": [
							147
						],
						"SafeERC20": [
							726
						],
						"Valtsale": [
							1237
						]
					},
					"id": 1238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1051,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 148,
							"src": "61:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 316,
							"src": "115:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 727,
							"src": "173:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"constant": true,
							"id": 1057,
							"mutability": "constant",
							"name": "INITIAL_TOKEN_PRICE",
							"nameLocation": "259:19:10",
							"nodeType": "VariableDeclaration",
							"scope": 1238,
							"src": "242:40:10",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_uint256",
								"typeString": "uint256"
							},
							"typeName": {
								"id": 1055,
								"name": "uint256",
								"nodeType": "ElementaryTypeName",
								"src": "242:7:10",
								"typeDescriptions": {
									"typeIdentifier": "t_uint256",
									"typeString": "uint256"
								}
							},
							"value": {
								"hexValue": "31",
								"id": 1056,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "281:1:10",
								"typeDescriptions": {
									"typeIdentifier": "t_rational_1_by_1",
									"typeString": "int_const 1"
								},
								"value": "1"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1060,
							"mutability": "constant",
							"name": "MAINNET_USDT",
							"nameLocation": "302:12:10",
							"nodeType": "VariableDeclaration",
							"scope": 1238,
							"src": "285:74:10",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1058,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "285:7:10",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307835356433393833323666393930353966463737353438353234363939393032374233313937393535",
								"id": 1059,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "317:42:10",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x55d398326f99059fF775485246999027B3197955"
							},
							"visibility": "internal"
						},
						{
							"constant": true,
							"id": 1063,
							"mutability": "constant",
							"name": "MAINNET_VALT",
							"nameLocation": "379:12:10",
							"nodeType": "VariableDeclaration",
							"scope": 1238,
							"src": "362:74:10",
							"stateVariable": false,
							"storageLocation": "default",
							"typeDescriptions": {
								"typeIdentifier": "t_address",
								"typeString": "address"
							},
							"typeName": {
								"id": 1061,
								"name": "address",
								"nodeType": "ElementaryTypeName",
								"src": "362:7:10",
								"stateMutability": "nonpayable",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								}
							},
							"value": {
								"hexValue": "307839433930343037364332443936363431353037623231314545336534393938373237313364443239",
								"id": 1062,
								"isConstant": false,
								"isLValue": false,
								"isPure": true,
								"kind": "number",
								"lValueRequested": false,
								"nodeType": "Literal",
								"src": "394:42:10",
								"typeDescriptions": {
									"typeIdentifier": "t_address",
									"typeString": "address"
								},
								"value": "0x9C904076C2D96641507b211EE3e499872713dD29"
							},
							"visibility": "internal"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Valtsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1237,
							"linearizedBaseContracts": [
								1237
							],
							"name": "Valtsale",
							"nameLocation": "472:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "16450092",
									"id": 1065,
									"mutability": "mutable",
									"name": "totalCap",
									"nameLocation": "503:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "488:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1064,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 1067,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "535:5:10",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "520:20:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1066,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "520:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1073,
									"mutability": "mutable",
									"name": "usdt",
									"nameLocation": "556:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "549:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1069,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1068,
											"name": "IERC20",
											"nameLocations": [
												"549:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "549:6:10"
										},
										"referencedDeclaration": 315,
										"src": "549:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1071,
												"name": "MAINNET_USDT",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1060,
												"src": "570:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1070,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 315,
											"src": "563:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1072,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "563:20:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1079,
									"mutability": "mutable",
									"name": "valt",
									"nameLocation": "622:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "615:34:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$315",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1075,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1074,
											"name": "IERC20",
											"nameLocations": [
												"615:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 315,
											"src": "615:6:10"
										},
										"referencedDeclaration": 315,
										"src": "615:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1077,
												"name": "MAINNET_VALT",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1063,
												"src": "636:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 1076,
											"name": "IERC20",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 315,
											"src": "629:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IERC20_$315_$",
												"typeString": "type(contract IERC20)"
											}
										},
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "629:20:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$315",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1083,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "695:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "658:45:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1082,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1080,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "667:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "658:28:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1081,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "678:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "737:2:10",
										"statements": []
									},
									"id": 1087,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "717:2:10"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "737:0:10"
									},
									"scope": 1237,
									"src": "710:29:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "768:85:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1090,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "787:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "791:6:10",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "787:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1092,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "801:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "787:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f742074686520636f6e7472616374206f776e6572",
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "808:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8",
																"typeString": "literal_string \"Not the contract owner\""
															},
															"value": "Not the contract owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f40f899e3d827919ff313c4325c1ece4db0c8c5fc3251000e1c0632edd92ebc8",
																"typeString": "literal_string \"Not the contract owner\""
															}
														],
														"id": 1089,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "779:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "779:54:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1096,
												"nodeType": "ExpressionStatement",
												"src": "779:54:10"
											},
											{
												"id": 1097,
												"nodeType": "PlaceholderStatement",
												"src": "844:1:10"
											}
										]
									},
									"id": 1099,
									"name": "onlyOwner",
									"nameLocation": "756:9:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "765:2:10"
									},
									"src": "747:106:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "875:31:10",
										"statements": [
											{
												"expression": {
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1102,
														"name": "totalCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "886:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1103,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "897:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "886:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1105,
												"nodeType": "ExpressionStatement",
												"src": "886:12:10"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "872:2:10"
									},
									"returnParameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:10"
									},
									"scope": 1237,
									"src": "861:45:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "969:377:10",
										"statements": [
											{
												"assignments": [
													1113
												],
												"declarations": [
													{
														"constant": false,
														"id": 1113,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "988:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1162,
														"src": "980:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1112,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "980:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1117,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "_usdtAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "1002:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1115,
														"name": "INITIAL_TOKEN_PRICE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1016:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1002:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "980:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1121,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1071:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1122,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1075:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1071:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1119,
																		"name": "usdt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1073,
																		"src": "1056:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$315",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1061:9:10",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "1056:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1056:26:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1124,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "1086:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1056:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420555344542062616c616e6365",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1099:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83",
																"typeString": "literal_string \"Insufficient USDT balance\""
															},
															"value": "Insufficient USDT balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3bb5503f8d018594376ab7a394266cd76a9df8ecdfb82540ee2634e39f47bb83",
																"typeString": "literal_string \"Insufficient USDT balance\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1048:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:79:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "1048:79:10"
											},
											{
												"expression": {
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1129,
														"name": "totalCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "1140:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1130,
															"name": "totalCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "1151:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1131,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1162:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1151:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1140:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "1140:33:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1138,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1202:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1206:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1202:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1142,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1222:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Valtsale_$1237",
																		"typeString": "contract Valtsale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Valtsale_$1237",
																		"typeString": "contract Valtsale"
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1214:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1140,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1214:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1214:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1144,
															"name": "_usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1109,
															"src": "1229:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1135,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1184:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1137,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1189:12:10",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 314,
														"src": "1184:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:57:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "ExpressionStatement",
												"src": "1184:57:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1150,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1266:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1270:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1266:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "1278:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1147,
															"name": "valt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "1252:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1257:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "1252:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1252:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "1252:38:10"
											},
											{
												"expression": {
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1155,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "1303:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1158,
														"indexExpression": {
															"expression": {
																"id": 1156,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1312:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1316:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1312:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1303:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1159,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "1327:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1303:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "1303:35:10"
											}
										]
									},
									"functionSelector": "bcd2f64a",
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyTokenWithUSDT",
									"nameLocation": "923:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "_usdtAmount",
												"nameLocation": "948:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "940:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:21:10"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:10"
									},
									"scope": 1237,
									"src": "914:432:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1173,
										"nodeType": "Block",
										"src": "1406:46:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1168,
														"name": "balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "1424:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1171,
													"indexExpression": {
														"expression": {
															"id": 1169,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1433:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1437:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1433:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1424:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1167,
												"id": 1172,
												"nodeType": "Return",
												"src": "1417:27:10"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 1174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1363:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1374:2:10"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "1397:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1397:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1396:9:10"
									},
									"scope": 1237,
									"src": "1354:98:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "1512:167:10",
										"statements": [
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1531:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1203,
														"src": "1523:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1523:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1188,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1185,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1564:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Valtsale_$1237",
																		"typeString": "contract Valtsale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Valtsale_$1237",
																		"typeString": "contract Valtsale"
																	}
																],
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1556:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1183,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1556:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1556:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1181,
															"name": "valt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "1541:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1182,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1546:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "1541:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1541:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1523:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1190,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "1589:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1599:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1589:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73206c65667420746f207769746864726177",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1602:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694",
																"typeString": "literal_string \"No tokens left to withdraw\""
															},
															"value": "No tokens left to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38a77cf6b2967b306258ebd549f1e20a97732bef8b2c26d9d391c4d7c1e4f694",
																"typeString": "literal_string \"No tokens left to withdraw\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1581:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1581:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "1581:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1656:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "1663:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1196,
															"name": "valt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "1642:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1647:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "1642:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1642:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1642:29:10"
											}
										]
									},
									"functionSelector": "8afbf669",
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1177,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1176,
												"name": "onlyOwner",
												"nameLocations": [
													"1502:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1099,
												"src": "1502:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1502:9:10"
										}
									],
									"name": "withdrawRemainingTokens",
									"nameLocation": "1469:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1492:2:10"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1512:0:10"
									},
									"scope": 1237,
									"src": "1460:219:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "1739:163:10",
										"statements": [
											{
												"assignments": [
													1212
												],
												"declarations": [
													{
														"constant": false,
														"id": 1212,
														"mutability": "mutable",
														"name": "balance",
														"nameLocation": "1758:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1235,
														"src": "1750:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1211,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1220,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1217,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1791:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Valtsale_$1237",
																		"typeString": "contract Valtsale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Valtsale_$1237",
																		"typeString": "contract Valtsale"
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1783:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1215,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1783:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1783:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1213,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1768:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1773:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 272,
														"src": "1768:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1768:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:47:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1222,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "1816:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1826:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1816:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2055534454206c65667420746f207769746864726177",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1829:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169",
																"typeString": "literal_string \"No USDT left to withdraw\""
															},
															"value": "No USDT left to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_076cd37fd44e628de8d4c28e83353d72418b5d534dfc5683b8fbc8220a29c169",
																"typeString": "literal_string \"No USDT left to withdraw\""
															}
														],
														"id": 1221,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "1808:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1231,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "1881:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1232,
															"name": "balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1212,
															"src": "1886:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1228,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1073,
															"src": "1867:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$315",
																"typeString": "contract IERC20"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1872:8:10",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 282,
														"src": "1867:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1867:27:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1234,
												"nodeType": "ExpressionStatement",
												"src": "1867:27:10"
											}
										]
									},
									"functionSelector": "59db80f8",
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1208,
												"name": "onlyOwner",
												"nameLocations": [
													"1729:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1099,
												"src": "1729:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1729:9:10"
										}
									],
									"name": "withdrawUSDT",
									"nameLocation": "1696:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "1717:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "1709:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1708:13:10"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1739:0:10"
									},
									"scope": 1237,
									"src": "1687:215:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1238,
							"src": "463:1442:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:1872:10"
				},
				"id": 10
			}
		}
	}
}